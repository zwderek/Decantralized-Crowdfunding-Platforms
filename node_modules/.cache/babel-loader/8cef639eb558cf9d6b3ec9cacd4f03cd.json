{"ast":null,"code":"import { lintWarning } from \"./utils\";\n\nfunction isConcatSelector(selector) {\n  var _selector$match;\n\n  var notContent = ((_selector$match = selector.match(/:not\\(([^)]*)\\)/)) === null || _selector$match === void 0 ? void 0 : _selector$match[1]) || ''; // split selector. e.g.\n  // `h1#a.b` => ['h1', #a', '.b']\n\n  var splitCells = notContent.split(/(\\[[^[]*])|(?=[.#])/).filter(function (str) {\n    return str;\n  });\n  return splitCells.length > 1;\n}\n\nfunction parsePath(info) {\n  return info.parentSelectors.reduce(function (prev, cur) {\n    if (!prev) {\n      return cur;\n    }\n\n    return cur.includes('&') ? cur.replace(/&/g, prev) : \"\".concat(prev, \" \").concat(cur);\n  }, '');\n}\n\nvar linter = function linter(key, value, info) {\n  var parentSelectorPath = parsePath(info);\n  var notList = parentSelectorPath.match(/:not\\([^)]*\\)/g) || [];\n\n  if (notList.length > 0 && notList.some(isConcatSelector)) {\n    lintWarning(\"Concat ':not' selector not support in legacy browsers.\", info);\n  }\n};\n\nexport default linter;","map":{"version":3,"names":["lintWarning","isConcatSelector","selector","_selector$match","notContent","match","splitCells","split","filter","str","length","parsePath","info","parentSelectors","reduce","prev","cur","includes","replace","concat","linter","key","value","parentSelectorPath","notList","some"],"sources":["D:/year4sem2/evmos/campaign/node_modules/@ant-design/cssinjs/es/linters/legacyNotSelectorLinter.js"],"sourcesContent":["import { lintWarning } from \"./utils\";\nfunction isConcatSelector(selector) {\n  var _selector$match;\n  var notContent = ((_selector$match = selector.match(/:not\\(([^)]*)\\)/)) === null || _selector$match === void 0 ? void 0 : _selector$match[1]) || '';\n\n  // split selector. e.g.\n  // `h1#a.b` => ['h1', #a', '.b']\n  var splitCells = notContent.split(/(\\[[^[]*])|(?=[.#])/).filter(function (str) {\n    return str;\n  });\n  return splitCells.length > 1;\n}\nfunction parsePath(info) {\n  return info.parentSelectors.reduce(function (prev, cur) {\n    if (!prev) {\n      return cur;\n    }\n    return cur.includes('&') ? cur.replace(/&/g, prev) : \"\".concat(prev, \" \").concat(cur);\n  }, '');\n}\nvar linter = function linter(key, value, info) {\n  var parentSelectorPath = parsePath(info);\n  var notList = parentSelectorPath.match(/:not\\([^)]*\\)/g) || [];\n  if (notList.length > 0 && notList.some(isConcatSelector)) {\n    lintWarning(\"Concat ':not' selector not support in legacy browsers.\", info);\n  }\n};\nexport default linter;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;;AACA,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;EAClC,IAAIC,eAAJ;;EACA,IAAIC,UAAU,GAAG,CAAC,CAACD,eAAe,GAAGD,QAAQ,CAACG,KAAT,CAAe,iBAAf,CAAnB,MAA0D,IAA1D,IAAkEF,eAAe,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwGA,eAAe,CAAC,CAAD,CAAxH,KAAgI,EAAjJ,CAFkC,CAIlC;EACA;;EACA,IAAIG,UAAU,GAAGF,UAAU,CAACG,KAAX,CAAiB,qBAAjB,EAAwCC,MAAxC,CAA+C,UAAUC,GAAV,EAAe;IAC7E,OAAOA,GAAP;EACD,CAFgB,CAAjB;EAGA,OAAOH,UAAU,CAACI,MAAX,GAAoB,CAA3B;AACD;;AACD,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;EACvB,OAAOA,IAAI,CAACC,eAAL,CAAqBC,MAArB,CAA4B,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;IACtD,IAAI,CAACD,IAAL,EAAW;MACT,OAAOC,GAAP;IACD;;IACD,OAAOA,GAAG,CAACC,QAAJ,CAAa,GAAb,IAAoBD,GAAG,CAACE,OAAJ,CAAY,IAAZ,EAAkBH,IAAlB,CAApB,GAA8C,GAAGI,MAAH,CAAUJ,IAAV,EAAgB,GAAhB,EAAqBI,MAArB,CAA4BH,GAA5B,CAArD;EACD,CALM,EAKJ,EALI,CAAP;AAMD;;AACD,IAAII,MAAM,GAAG,SAASA,MAAT,CAAgBC,GAAhB,EAAqBC,KAArB,EAA4BV,IAA5B,EAAkC;EAC7C,IAAIW,kBAAkB,GAAGZ,SAAS,CAACC,IAAD,CAAlC;EACA,IAAIY,OAAO,GAAGD,kBAAkB,CAAClB,KAAnB,CAAyB,gBAAzB,KAA8C,EAA5D;;EACA,IAAImB,OAAO,CAACd,MAAR,GAAiB,CAAjB,IAAsBc,OAAO,CAACC,IAAR,CAAaxB,gBAAb,CAA1B,EAA0D;IACxDD,WAAW,CAAC,wDAAD,EAA2DY,IAA3D,CAAX;EACD;AACF,CAND;;AAOA,eAAeQ,MAAf"},"metadata":{},"sourceType":"module"}