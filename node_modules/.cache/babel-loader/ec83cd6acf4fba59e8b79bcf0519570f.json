{"ast":null,"code":"import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\n\nconst genBaseStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    iconCls,\n    avatarBg,\n    avatarColor,\n    avatarSizeBase,\n    avatarSizeLG,\n    avatarSizeSM,\n    avatarFontSizeBase,\n    avatarFontSizeLG,\n    avatarFontSizeSM,\n    borderRadius,\n    borderRadiusLG,\n    borderRadiusSM,\n    lineWidth,\n    lineType\n  } = token; // Avatar size style\n\n  const avatarSizeStyle = (size, fontSize, radius) => ({\n    width: size,\n    height: size,\n    lineHeight: `${size - lineWidth * 2}px`,\n    borderRadius: '50%',\n    [`&${componentCls}-square`]: {\n      borderRadius: radius\n    },\n    [`${componentCls}-string`]: {\n      position: 'absolute',\n      left: {\n        _skip_check_: true,\n        value: '50%'\n      },\n      transformOrigin: '0 center'\n    },\n    [`&${componentCls}-icon`]: {\n      fontSize,\n      [`> ${iconCls}`]: {\n        margin: 0\n      }\n    }\n  });\n\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      overflow: 'hidden',\n      color: avatarColor,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      background: avatarBg,\n      border: `${lineWidth}px ${lineType} transparent`,\n      [`&-image`]: {\n        background: 'transparent'\n      },\n      [`${antCls}-image-img`]: {\n        display: 'block'\n      }\n    }), avatarSizeStyle(avatarSizeBase, avatarFontSizeBase, borderRadius)), {\n      [`&-lg`]: Object.assign({}, avatarSizeStyle(avatarSizeLG, avatarFontSizeLG, borderRadiusLG)),\n      [`&-sm`]: Object.assign({}, avatarSizeStyle(avatarSizeSM, avatarFontSizeSM, borderRadiusSM)),\n      '> img': {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    })\n  };\n};\n\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    avatarGroupBorderColor,\n    avatarGroupSpace\n  } = token;\n  return {\n    [`${componentCls}-group`]: {\n      display: 'inline-flex',\n      [`${componentCls}`]: {\n        borderColor: avatarGroupBorderColor\n      },\n      [`> *:not(:first-child)`]: {\n        marginInlineStart: avatarGroupSpace\n      }\n    }\n  };\n};\n\nexport default genComponentStyleHook('Avatar', token => {\n  const {\n    colorTextLightSolid,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    fontSize,\n    fontSizeLG,\n    fontSizeXL,\n    fontSizeHeading3,\n    marginXS,\n    colorBorderBg,\n    colorTextPlaceholder\n  } = token;\n  const avatarToken = mergeToken(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid,\n    avatarSizeBase: controlHeight,\n    avatarSizeLG: controlHeightLG,\n    avatarSizeSM: controlHeightSM,\n    avatarFontSizeBase: Math.round((fontSizeLG + fontSizeXL) / 2),\n    avatarFontSizeLG: fontSizeHeading3,\n    avatarFontSizeSM: fontSize,\n    avatarGroupSpace: -marginXS,\n    avatarGroupBorderColor: colorBorderBg\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n});","map":{"version":3,"names":["genComponentStyleHook","mergeToken","resetComponent","genBaseStyle","token","antCls","componentCls","iconCls","avatarBg","avatarColor","avatarSizeBase","avatarSizeLG","avatarSizeSM","avatarFontSizeBase","avatarFontSizeLG","avatarFontSizeSM","borderRadius","borderRadiusLG","borderRadiusSM","lineWidth","lineType","avatarSizeStyle","size","fontSize","radius","width","height","lineHeight","position","left","_skip_check_","value","transformOrigin","margin","Object","assign","display","overflow","color","whiteSpace","textAlign","verticalAlign","background","border","objectFit","genGroupStyle","avatarGroupBorderColor","avatarGroupSpace","borderColor","marginInlineStart","colorTextLightSolid","controlHeight","controlHeightLG","controlHeightSM","fontSizeLG","fontSizeXL","fontSizeHeading3","marginXS","colorBorderBg","colorTextPlaceholder","avatarToken","Math","round"],"sources":["D:/year4sem2/evmos/campaign/node_modules/antd/es/avatar/style/index.js"],"sourcesContent":["import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nconst genBaseStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    iconCls,\n    avatarBg,\n    avatarColor,\n    avatarSizeBase,\n    avatarSizeLG,\n    avatarSizeSM,\n    avatarFontSizeBase,\n    avatarFontSizeLG,\n    avatarFontSizeSM,\n    borderRadius,\n    borderRadiusLG,\n    borderRadiusSM,\n    lineWidth,\n    lineType\n  } = token;\n  // Avatar size style\n  const avatarSizeStyle = (size, fontSize, radius) => ({\n    width: size,\n    height: size,\n    lineHeight: `${size - lineWidth * 2}px`,\n    borderRadius: '50%',\n    [`&${componentCls}-square`]: {\n      borderRadius: radius\n    },\n    [`${componentCls}-string`]: {\n      position: 'absolute',\n      left: {\n        _skip_check_: true,\n        value: '50%'\n      },\n      transformOrigin: '0 center'\n    },\n    [`&${componentCls}-icon`]: {\n      fontSize,\n      [`> ${iconCls}`]: {\n        margin: 0\n      }\n    }\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      overflow: 'hidden',\n      color: avatarColor,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      background: avatarBg,\n      border: `${lineWidth}px ${lineType} transparent`,\n      [`&-image`]: {\n        background: 'transparent'\n      },\n      [`${antCls}-image-img`]: {\n        display: 'block'\n      }\n    }), avatarSizeStyle(avatarSizeBase, avatarFontSizeBase, borderRadius)), {\n      [`&-lg`]: Object.assign({}, avatarSizeStyle(avatarSizeLG, avatarFontSizeLG, borderRadiusLG)),\n      [`&-sm`]: Object.assign({}, avatarSizeStyle(avatarSizeSM, avatarFontSizeSM, borderRadiusSM)),\n      '> img': {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    })\n  };\n};\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    avatarGroupBorderColor,\n    avatarGroupSpace\n  } = token;\n  return {\n    [`${componentCls}-group`]: {\n      display: 'inline-flex',\n      [`${componentCls}`]: {\n        borderColor: avatarGroupBorderColor\n      },\n      [`> *:not(:first-child)`]: {\n        marginInlineStart: avatarGroupSpace\n      }\n    }\n  };\n};\nexport default genComponentStyleHook('Avatar', token => {\n  const {\n    colorTextLightSolid,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    fontSize,\n    fontSizeLG,\n    fontSizeXL,\n    fontSizeHeading3,\n    marginXS,\n    colorBorderBg,\n    colorTextPlaceholder\n  } = token;\n  const avatarToken = mergeToken(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid,\n    avatarSizeBase: controlHeight,\n    avatarSizeLG: controlHeightLG,\n    avatarSizeSM: controlHeightSM,\n    avatarFontSizeBase: Math.round((fontSizeLG + fontSizeXL) / 2),\n    avatarFontSizeLG: fontSizeHeading3,\n    avatarFontSizeSM: fontSize,\n    avatarGroupSpace: -marginXS,\n    avatarGroupBorderColor: colorBorderBg\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}