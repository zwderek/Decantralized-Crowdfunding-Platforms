{"ast":null,"code":"import * as React from 'react';\nimport warning from '../_util/warning';\nimport { changeConfirmLocale } from '../modal/locale';\nimport LocaleContext from './context';\nexport const ANT_MARK = 'internalMark';\n\nconst LocaleProvider = props => {\n  const {\n    locale = {},\n    children,\n    _ANT_MARK__\n  } = props;\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(_ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale') : void 0;\n  }\n\n  React.useEffect(() => {\n    changeConfirmLocale(locale && locale.Modal);\n    return () => {\n      changeConfirmLocale();\n    };\n  }, [locale]);\n  const getMemoizedContextValue = React.useMemo(() => Object.assign(Object.assign({}, locale), {\n    exist: true\n  }), [locale]);\n  return /*#__PURE__*/React.createElement(LocaleContext.Provider, {\n    value: getMemoizedContextValue\n  }, children);\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  LocaleProvider.displayName = 'LocaleProvider';\n}\n\nexport default LocaleProvider;","map":{"version":3,"names":["React","warning","changeConfirmLocale","LocaleContext","ANT_MARK","LocaleProvider","props","locale","children","_ANT_MARK__","process","env","NODE_ENV","useEffect","Modal","getMemoizedContextValue","useMemo","Object","assign","exist","createElement","Provider","value","displayName"],"sources":["D:/year4sem2/evmos/campaign/node_modules/antd/es/locale/index.js"],"sourcesContent":["import * as React from 'react';\nimport warning from '../_util/warning';\nimport { changeConfirmLocale } from '../modal/locale';\nimport LocaleContext from './context';\nexport const ANT_MARK = 'internalMark';\nconst LocaleProvider = props => {\n  const {\n    locale = {},\n    children,\n    _ANT_MARK__\n  } = props;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(_ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale') : void 0;\n  }\n  React.useEffect(() => {\n    changeConfirmLocale(locale && locale.Modal);\n    return () => {\n      changeConfirmLocale();\n    };\n  }, [locale]);\n  const getMemoizedContextValue = React.useMemo(() => Object.assign(Object.assign({}, locale), {\n    exist: true\n  }), [locale]);\n  return /*#__PURE__*/React.createElement(LocaleContext.Provider, {\n    value: getMemoizedContextValue\n  }, children);\n};\nif (process.env.NODE_ENV !== 'production') {\n  LocaleProvider.displayName = 'LocaleProvider';\n}\nexport default LocaleProvider;"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,mBAAT,QAAoC,iBAApC;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,OAAO,MAAMC,QAAQ,GAAG,cAAjB;;AACP,MAAMC,cAAc,GAAGC,KAAK,IAAI;EAC9B,MAAM;IACJC,MAAM,GAAG,EADL;IAEJC,QAFI;IAGJC;EAHI,IAIFH,KAJJ;;EAKA,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzCF,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCX,OAAO,CAACQ,WAAW,KAAKL,QAAjB,EAA2B,gBAA3B,EAA6C,+GAA7C,CAA/C,GAA+M,KAAK,CAApN;EACD;;EACDJ,KAAK,CAACa,SAAN,CAAgB,MAAM;IACpBX,mBAAmB,CAACK,MAAM,IAAIA,MAAM,CAACO,KAAlB,CAAnB;IACA,OAAO,MAAM;MACXZ,mBAAmB;IACpB,CAFD;EAGD,CALD,EAKG,CAACK,MAAD,CALH;EAMA,MAAMQ,uBAAuB,GAAGf,KAAK,CAACgB,OAAN,CAAc,MAAMC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,MAAlB,CAAd,EAAyC;IAC3FY,KAAK,EAAE;EADoF,CAAzC,CAApB,EAE5B,CAACZ,MAAD,CAF4B,CAAhC;EAGA,OAAO,aAAaP,KAAK,CAACoB,aAAN,CAAoBjB,aAAa,CAACkB,QAAlC,EAA4C;IAC9DC,KAAK,EAAEP;EADuD,CAA5C,EAEjBP,QAFiB,CAApB;AAGD,CArBD;;AAsBA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;EACzCP,cAAc,CAACkB,WAAf,GAA6B,gBAA7B;AACD;;AACD,eAAelB,cAAf"},"metadata":{},"sourceType":"module"}