{"ast":null,"code":"export function isNotGrey(color) {\n  // eslint-disable-next-line no-useless-escape\n  const match = (color || '').match(/rgba?\\((\\d*), (\\d*), (\\d*)(, [\\d.]*)?\\)/);\n\n  if (match && match[1] && match[2] && match[3]) {\n    return !(match[1] === match[2] && match[2] === match[3]);\n  }\n\n  return true;\n}\nexport function isValidWaveColor(color) {\n  return color && color !== '#fff' && color !== '#ffffff' && color !== 'rgb(255, 255, 255)' && color !== 'rgba(255, 255, 255, 1)' && isNotGrey(color) && !/rgba\\((?:\\d*, ){3}0\\)/.test(color) && // any transparent rgba color\n  color !== 'transparent';\n}\nexport function getTargetWaveColor(node) {\n  const {\n    borderTopColor,\n    borderColor,\n    backgroundColor\n  } = getComputedStyle(node);\n\n  if (isValidWaveColor(borderTopColor)) {\n    return borderTopColor;\n  }\n\n  if (isValidWaveColor(borderColor)) {\n    return borderColor;\n  }\n\n  if (isValidWaveColor(backgroundColor)) {\n    return backgroundColor;\n  }\n\n  return null;\n}","map":{"version":3,"names":["isNotGrey","color","match","isValidWaveColor","test","getTargetWaveColor","node","borderTopColor","borderColor","backgroundColor","getComputedStyle"],"sources":["D:/year4sem2/evmos/campaign/node_modules/antd/es/_util/wave/util.js"],"sourcesContent":["export function isNotGrey(color) {\n  // eslint-disable-next-line no-useless-escape\n  const match = (color || '').match(/rgba?\\((\\d*), (\\d*), (\\d*)(, [\\d.]*)?\\)/);\n  if (match && match[1] && match[2] && match[3]) {\n    return !(match[1] === match[2] && match[2] === match[3]);\n  }\n  return true;\n}\nexport function isValidWaveColor(color) {\n  return color && color !== '#fff' && color !== '#ffffff' && color !== 'rgb(255, 255, 255)' && color !== 'rgba(255, 255, 255, 1)' && isNotGrey(color) && !/rgba\\((?:\\d*, ){3}0\\)/.test(color) &&\n  // any transparent rgba color\n  color !== 'transparent';\n}\nexport function getTargetWaveColor(node) {\n  const {\n    borderTopColor,\n    borderColor,\n    backgroundColor\n  } = getComputedStyle(node);\n  if (isValidWaveColor(borderTopColor)) {\n    return borderTopColor;\n  }\n  if (isValidWaveColor(borderColor)) {\n    return borderColor;\n  }\n  if (isValidWaveColor(backgroundColor)) {\n    return backgroundColor;\n  }\n  return null;\n}"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;EAC/B;EACA,MAAMC,KAAK,GAAG,CAACD,KAAK,IAAI,EAAV,EAAcC,KAAd,CAAoB,yCAApB,CAAd;;EACA,IAAIA,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAd,IAAqBA,KAAK,CAAC,CAAD,CAA1B,IAAiCA,KAAK,CAAC,CAAD,CAA1C,EAA+C;IAC7C,OAAO,EAAEA,KAAK,CAAC,CAAD,CAAL,KAAaA,KAAK,CAAC,CAAD,CAAlB,IAAyBA,KAAK,CAAC,CAAD,CAAL,KAAaA,KAAK,CAAC,CAAD,CAA7C,CAAP;EACD;;EACD,OAAO,IAAP;AACD;AACD,OAAO,SAASC,gBAAT,CAA0BF,KAA1B,EAAiC;EACtC,OAAOA,KAAK,IAAIA,KAAK,KAAK,MAAnB,IAA6BA,KAAK,KAAK,SAAvC,IAAoDA,KAAK,KAAK,oBAA9D,IAAsFA,KAAK,KAAK,wBAAhG,IAA4HD,SAAS,CAACC,KAAD,CAArI,IAAgJ,CAAC,wBAAwBG,IAAxB,CAA6BH,KAA7B,CAAjJ,IACP;EACAA,KAAK,KAAK,aAFV;AAGD;AACD,OAAO,SAASI,kBAAT,CAA4BC,IAA5B,EAAkC;EACvC,MAAM;IACJC,cADI;IAEJC,WAFI;IAGJC;EAHI,IAIFC,gBAAgB,CAACJ,IAAD,CAJpB;;EAKA,IAAIH,gBAAgB,CAACI,cAAD,CAApB,EAAsC;IACpC,OAAOA,cAAP;EACD;;EACD,IAAIJ,gBAAgB,CAACK,WAAD,CAApB,EAAmC;IACjC,OAAOA,WAAP;EACD;;EACD,IAAIL,gBAAgB,CAACM,eAAD,CAApB,EAAuC;IACrC,OAAOA,eAAP;EACD;;EACD,OAAO,IAAP;AACD"},"metadata":{},"sourceType":"module"}