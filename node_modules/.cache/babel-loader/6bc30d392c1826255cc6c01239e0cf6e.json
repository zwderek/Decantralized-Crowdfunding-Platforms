{"ast":null,"code":"import { TinyColor } from '@ctrl/tinycolor';\n\nfunction isStableColor(color) {\n  return color >= 0 && color <= 255;\n}\n\nfunction getAlphaColor(frontColor, backgroundColor) {\n  const {\n    r: fR,\n    g: fG,\n    b: fB,\n    a: originAlpha\n  } = new TinyColor(frontColor).toRgb();\n\n  if (originAlpha < 1) {\n    return frontColor;\n  }\n\n  const {\n    r: bR,\n    g: bG,\n    b: bB\n  } = new TinyColor(backgroundColor).toRgb();\n\n  for (let fA = 0.01; fA <= 1; fA += 0.01) {\n    const r = Math.round((fR - bR * (1 - fA)) / fA);\n    const g = Math.round((fG - bG * (1 - fA)) / fA);\n    const b = Math.round((fB - bB * (1 - fA)) / fA);\n\n    if (isStableColor(r) && isStableColor(g) && isStableColor(b)) {\n      return new TinyColor({\n        r,\n        g,\n        b,\n        a: Math.round(fA * 100) / 100\n      }).toRgbString();\n    }\n  } // fallback\n\n  /* istanbul ignore next */\n\n\n  return new TinyColor({\n    r: fR,\n    g: fG,\n    b: fB,\n    a: 1\n  }).toRgbString();\n}\n\nexport default getAlphaColor;","map":{"version":3,"names":["TinyColor","isStableColor","color","getAlphaColor","frontColor","backgroundColor","r","fR","g","fG","b","fB","a","originAlpha","toRgb","bR","bG","bB","fA","Math","round","toRgbString"],"sources":["D:/year4sem2/evmos/campaign/node_modules/antd/es/theme/util/getAlphaColor.js"],"sourcesContent":["import { TinyColor } from '@ctrl/tinycolor';\nfunction isStableColor(color) {\n  return color >= 0 && color <= 255;\n}\nfunction getAlphaColor(frontColor, backgroundColor) {\n  const {\n    r: fR,\n    g: fG,\n    b: fB,\n    a: originAlpha\n  } = new TinyColor(frontColor).toRgb();\n  if (originAlpha < 1) {\n    return frontColor;\n  }\n  const {\n    r: bR,\n    g: bG,\n    b: bB\n  } = new TinyColor(backgroundColor).toRgb();\n  for (let fA = 0.01; fA <= 1; fA += 0.01) {\n    const r = Math.round((fR - bR * (1 - fA)) / fA);\n    const g = Math.round((fG - bG * (1 - fA)) / fA);\n    const b = Math.round((fB - bB * (1 - fA)) / fA);\n    if (isStableColor(r) && isStableColor(g) && isStableColor(b)) {\n      return new TinyColor({\n        r,\n        g,\n        b,\n        a: Math.round(fA * 100) / 100\n      }).toRgbString();\n    }\n  }\n  // fallback\n  /* istanbul ignore next */\n  return new TinyColor({\n    r: fR,\n    g: fG,\n    b: fB,\n    a: 1\n  }).toRgbString();\n}\nexport default getAlphaColor;"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAC5B,OAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,GAA9B;AACD;;AACD,SAASC,aAAT,CAAuBC,UAAvB,EAAmCC,eAAnC,EAAoD;EAClD,MAAM;IACJC,CAAC,EAAEC,EADC;IAEJC,CAAC,EAAEC,EAFC;IAGJC,CAAC,EAAEC,EAHC;IAIJC,CAAC,EAAEC;EAJC,IAKF,IAAIb,SAAJ,CAAcI,UAAd,EAA0BU,KAA1B,EALJ;;EAMA,IAAID,WAAW,GAAG,CAAlB,EAAqB;IACnB,OAAOT,UAAP;EACD;;EACD,MAAM;IACJE,CAAC,EAAES,EADC;IAEJP,CAAC,EAAEQ,EAFC;IAGJN,CAAC,EAAEO;EAHC,IAIF,IAAIjB,SAAJ,CAAcK,eAAd,EAA+BS,KAA/B,EAJJ;;EAKA,KAAK,IAAII,EAAE,GAAG,IAAd,EAAoBA,EAAE,IAAI,CAA1B,EAA6BA,EAAE,IAAI,IAAnC,EAAyC;IACvC,MAAMZ,CAAC,GAAGa,IAAI,CAACC,KAAL,CAAW,CAACb,EAAE,GAAGQ,EAAE,IAAI,IAAIG,EAAR,CAAR,IAAuBA,EAAlC,CAAV;IACA,MAAMV,CAAC,GAAGW,IAAI,CAACC,KAAL,CAAW,CAACX,EAAE,GAAGO,EAAE,IAAI,IAAIE,EAAR,CAAR,IAAuBA,EAAlC,CAAV;IACA,MAAMR,CAAC,GAAGS,IAAI,CAACC,KAAL,CAAW,CAACT,EAAE,GAAGM,EAAE,IAAI,IAAIC,EAAR,CAAR,IAAuBA,EAAlC,CAAV;;IACA,IAAIjB,aAAa,CAACK,CAAD,CAAb,IAAoBL,aAAa,CAACO,CAAD,CAAjC,IAAwCP,aAAa,CAACS,CAAD,CAAzD,EAA8D;MAC5D,OAAO,IAAIV,SAAJ,CAAc;QACnBM,CADmB;QAEnBE,CAFmB;QAGnBE,CAHmB;QAInBE,CAAC,EAAEO,IAAI,CAACC,KAAL,CAAWF,EAAE,GAAG,GAAhB,IAAuB;MAJP,CAAd,EAKJG,WALI,EAAP;IAMD;EACF,CA3BiD,CA4BlD;;EACA;;;EACA,OAAO,IAAIrB,SAAJ,CAAc;IACnBM,CAAC,EAAEC,EADgB;IAEnBC,CAAC,EAAEC,EAFgB;IAGnBC,CAAC,EAAEC,EAHgB;IAInBC,CAAC,EAAE;EAJgB,CAAd,EAKJS,WALI,EAAP;AAMD;;AACD,eAAelB,aAAf"},"metadata":{},"sourceType":"module"}