{"ast":null,"code":"import raf from \"rc-util/es/raf\";\nimport * as React from 'react';\nimport { useRef } from 'react';\nexport default function useFrameState(defaultValue) {\n  const [value, setValue] = React.useState(defaultValue);\n  const frameRef = useRef(null);\n  const batchRef = useRef([]);\n  const destroyRef = useRef(false);\n  React.useEffect(() => {\n    destroyRef.current = false;\n    return () => {\n      destroyRef.current = true;\n      raf.cancel(frameRef.current);\n      frameRef.current = null;\n    };\n  }, []);\n\n  function setFrameValue(updater) {\n    if (destroyRef.current) {\n      return;\n    }\n\n    if (frameRef.current === null) {\n      batchRef.current = [];\n      frameRef.current = raf(() => {\n        frameRef.current = null;\n        setValue(prevValue => {\n          let current = prevValue;\n          batchRef.current.forEach(func => {\n            current = func(current);\n          });\n          return current;\n        });\n      });\n    }\n\n    batchRef.current.push(updater);\n  }\n\n  return [value, setFrameValue];\n}","map":{"version":3,"names":["raf","React","useRef","useFrameState","defaultValue","value","setValue","useState","frameRef","batchRef","destroyRef","useEffect","current","cancel","setFrameValue","updater","prevValue","forEach","func","push"],"sources":["D:/year4sem2/evmos/campaign/node_modules/antd/es/form/hooks/useFrameState.js"],"sourcesContent":["import raf from \"rc-util/es/raf\";\nimport * as React from 'react';\nimport { useRef } from 'react';\nexport default function useFrameState(defaultValue) {\n  const [value, setValue] = React.useState(defaultValue);\n  const frameRef = useRef(null);\n  const batchRef = useRef([]);\n  const destroyRef = useRef(false);\n  React.useEffect(() => {\n    destroyRef.current = false;\n    return () => {\n      destroyRef.current = true;\n      raf.cancel(frameRef.current);\n      frameRef.current = null;\n    };\n  }, []);\n  function setFrameValue(updater) {\n    if (destroyRef.current) {\n      return;\n    }\n    if (frameRef.current === null) {\n      batchRef.current = [];\n      frameRef.current = raf(() => {\n        frameRef.current = null;\n        setValue(prevValue => {\n          let current = prevValue;\n          batchRef.current.forEach(func => {\n            current = func(current);\n          });\n          return current;\n        });\n      });\n    }\n    batchRef.current.push(updater);\n  }\n  return [value, setFrameValue];\n}"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,gBAAhB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,eAAe,SAASC,aAAT,CAAuBC,YAAvB,EAAqC;EAClD,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAeH,YAAf,CAA1B;EACA,MAAMI,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;EACA,MAAMO,QAAQ,GAAGP,MAAM,CAAC,EAAD,CAAvB;EACA,MAAMQ,UAAU,GAAGR,MAAM,CAAC,KAAD,CAAzB;EACAD,KAAK,CAACU,SAAN,CAAgB,MAAM;IACpBD,UAAU,CAACE,OAAX,GAAqB,KAArB;IACA,OAAO,MAAM;MACXF,UAAU,CAACE,OAAX,GAAqB,IAArB;MACAZ,GAAG,CAACa,MAAJ,CAAWL,QAAQ,CAACI,OAApB;MACAJ,QAAQ,CAACI,OAAT,GAAmB,IAAnB;IACD,CAJD;EAKD,CAPD,EAOG,EAPH;;EAQA,SAASE,aAAT,CAAuBC,OAAvB,EAAgC;IAC9B,IAAIL,UAAU,CAACE,OAAf,EAAwB;MACtB;IACD;;IACD,IAAIJ,QAAQ,CAACI,OAAT,KAAqB,IAAzB,EAA+B;MAC7BH,QAAQ,CAACG,OAAT,GAAmB,EAAnB;MACAJ,QAAQ,CAACI,OAAT,GAAmBZ,GAAG,CAAC,MAAM;QAC3BQ,QAAQ,CAACI,OAAT,GAAmB,IAAnB;QACAN,QAAQ,CAACU,SAAS,IAAI;UACpB,IAAIJ,OAAO,GAAGI,SAAd;UACAP,QAAQ,CAACG,OAAT,CAAiBK,OAAjB,CAAyBC,IAAI,IAAI;YAC/BN,OAAO,GAAGM,IAAI,CAACN,OAAD,CAAd;UACD,CAFD;UAGA,OAAOA,OAAP;QACD,CANO,CAAR;MAOD,CATqB,CAAtB;IAUD;;IACDH,QAAQ,CAACG,OAAT,CAAiBO,IAAjB,CAAsBJ,OAAtB;EACD;;EACD,OAAO,CAACV,KAAD,EAAQS,aAAR,CAAP;AACD"},"metadata":{},"sourceType":"module"}