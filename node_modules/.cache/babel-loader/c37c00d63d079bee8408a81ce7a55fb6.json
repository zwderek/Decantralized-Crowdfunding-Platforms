{"ast":null,"code":"import { Keyframes } from '@ant-design/cssinjs';\nimport { genCollapseMotion } from '../../style/motion';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genFocusOutline, resetComponent } from '../../style'; // ============================ Keyframes =============================\n\nconst treeNodeFX = new Keyframes('ant-tree-node-fx-do-not-use', {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n}); // ============================== Switch ==============================\n\nconst getSwitchStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-switcher-icon`]: {\n    display: 'inline-block',\n    fontSize: 10,\n    verticalAlign: 'baseline',\n    svg: {\n      transition: `transform ${token.motionDurationSlow}`\n    }\n  }\n}); // =============================== Drop ===============================\n\n\nconst getDropIndicatorStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-drop-indicator`]: {\n    position: 'absolute',\n    // it should displayed over the following node\n    zIndex: 1,\n    height: 2,\n    backgroundColor: token.colorPrimary,\n    borderRadius: 1,\n    pointerEvents: 'none',\n    '&:after': {\n      position: 'absolute',\n      top: -3,\n      insetInlineStart: -6,\n      width: 8,\n      height: 8,\n      backgroundColor: 'transparent',\n      border: `${token.lineWidthBold}px solid ${token.colorPrimary}`,\n      borderRadius: '50%',\n      content: '\"\"'\n    }\n  }\n});\n\nexport const genBaseStyle = (prefixCls, token) => {\n  const {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding,\n    treeTitleHeight\n  } = token;\n  const treeCheckBoxMarginVertical = (treeTitleHeight - token.fontSizeLG) / 2;\n  const treeCheckBoxMarginHorizontal = token.paddingXS;\n  return {\n    [treeCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      background: token.colorBgContainer,\n      borderRadius: token.borderRadius,\n      transition: `background-color ${token.motionDurationSlow}`,\n      [`&${treeCls}-rtl`]: {\n        // >>> Switcher\n        [`${treeCls}-switcher`]: {\n          '&_close': {\n            [`${treeCls}-switcher-icon`]: {\n              svg: {\n                transform: 'rotate(90deg)'\n              }\n            }\n          }\n        }\n      },\n      [`&-focused:not(:hover):not(${treeCls}-active-focused)`]: Object.assign({}, genFocusOutline(token)),\n      // =================== Virtual List ===================\n      [`${treeCls}-list-holder-inner`]: {\n        alignItems: 'flex-start'\n      },\n      [`&${treeCls}-block-node`]: {\n        [`${treeCls}-list-holder-inner`]: {\n          alignItems: 'stretch',\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            flex: 'auto'\n          },\n          // >>> Drag\n          [`${treeNodeCls}.dragging`]: {\n            position: 'relative',\n            '&:after': {\n              position: 'absolute',\n              top: 0,\n              insetInlineEnd: 0,\n              bottom: treeNodePadding,\n              insetInlineStart: 0,\n              border: `1px solid ${token.colorPrimary}`,\n              opacity: 0,\n              animationName: treeNodeFX,\n              animationDuration: token.motionDurationSlow,\n              animationPlayState: 'running',\n              animationFillMode: 'forwards',\n              content: '\"\"',\n              pointerEvents: 'none'\n            }\n          }\n        }\n      },\n      // ===================== TreeNode =====================\n      [`${treeNodeCls}`]: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        padding: `0 0 ${treeNodePadding}px 0`,\n        outline: 'none',\n        '&-rtl': {\n          direction: 'rtl'\n        },\n        // Disabled\n        '&-disabled': {\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            color: token.colorTextDisabled,\n            cursor: 'not-allowed',\n            '&:hover': {\n              background: 'transparent'\n            }\n          }\n        },\n        [`&-active ${treeCls}-node-content-wrapper`]: Object.assign({}, genFocusOutline(token)),\n        [`&:not(${treeNodeCls}-disabled).filter-node ${treeCls}-title`]: {\n          color: 'inherit',\n          fontWeight: 500\n        },\n        '&-draggable': {\n          [`${treeCls}-draggable-icon`]: {\n            width: treeTitleHeight,\n            lineHeight: `${treeTitleHeight}px`,\n            textAlign: 'center',\n            visibility: 'visible',\n            opacity: 0.2,\n            transition: `opacity ${token.motionDurationSlow}`,\n            [`${treeNodeCls}:hover &`]: {\n              opacity: 0.45\n            }\n          },\n          [`&${treeNodeCls}-disabled`]: {\n            [`${treeCls}-draggable-icon`]: {\n              visibility: 'hidden'\n            }\n          }\n        }\n      },\n      // >>> Indent\n      [`${treeCls}-indent`]: {\n        alignSelf: 'stretch',\n        whiteSpace: 'nowrap',\n        userSelect: 'none',\n        '&-unit': {\n          display: 'inline-block',\n          width: treeTitleHeight\n        }\n      },\n      // >>> Drag Handler\n      [`${treeCls}-draggable-icon`]: {\n        visibility: 'hidden'\n      },\n      // >>> Switcher\n      [`${treeCls}-switcher`]: Object.assign(Object.assign({}, getSwitchStyle(prefixCls, token)), {\n        position: 'relative',\n        flex: 'none',\n        alignSelf: 'stretch',\n        width: treeTitleHeight,\n        margin: 0,\n        lineHeight: `${treeTitleHeight}px`,\n        textAlign: 'center',\n        cursor: 'pointer',\n        userSelect: 'none',\n        '&-noop': {\n          cursor: 'default'\n        },\n        '&_close': {\n          [`${treeCls}-switcher-icon`]: {\n            svg: {\n              transform: 'rotate(-90deg)'\n            }\n          }\n        },\n        '&-loading-icon': {\n          color: token.colorPrimary\n        },\n        '&-leaf-line': {\n          position: 'relative',\n          zIndex: 1,\n          display: 'inline-block',\n          width: '100%',\n          height: '100%',\n          // https://github.com/ant-design/ant-design/issues/31884\n          '&:before': {\n            position: 'absolute',\n            top: 0,\n            insetInlineEnd: treeTitleHeight / 2,\n            bottom: -treeNodePadding,\n            marginInlineStart: -1,\n            borderInlineEnd: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          },\n          '&:after': {\n            position: 'absolute',\n            width: treeTitleHeight / 2 * 0.8,\n            height: treeTitleHeight / 2,\n            borderBottom: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          }\n        }\n      }),\n      // >>> Checkbox\n      [`${treeCls}-checkbox`]: {\n        top: 'initial',\n        marginInlineEnd: treeCheckBoxMarginHorizontal,\n        marginBlockStart: treeCheckBoxMarginVertical\n      },\n      // >>> Title\n      // add `${treeCls}-checkbox + span` to cover checkbox `${checkboxCls} + span`\n      [`${treeCls}-node-content-wrapper, ${treeCls}-checkbox + span`]: {\n        position: 'relative',\n        zIndex: 'auto',\n        minHeight: treeTitleHeight,\n        margin: 0,\n        padding: `0 ${token.paddingXS / 2}px`,\n        color: 'inherit',\n        lineHeight: `${treeTitleHeight}px`,\n        background: 'transparent',\n        borderRadius: token.borderRadius,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}, border 0s, line-height 0s, box-shadow 0s`,\n        '&:hover': {\n          backgroundColor: token.controlItemBgHover\n        },\n        [`&${treeCls}-node-selected`]: {\n          backgroundColor: token.controlItemBgActive\n        },\n        // Icon\n        [`${treeCls}-iconEle`]: {\n          display: 'inline-block',\n          width: treeTitleHeight,\n          height: treeTitleHeight,\n          lineHeight: `${treeTitleHeight}px`,\n          textAlign: 'center',\n          verticalAlign: 'top',\n          '&:empty': {\n            display: 'none'\n          }\n        }\n      },\n      // https://github.com/ant-design/ant-design/issues/28217\n      [`${treeCls}-unselectable ${treeCls}-node-content-wrapper:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      // ==================== Draggable =====================\n      [`${treeCls}-node-content-wrapper`]: Object.assign({\n        lineHeight: `${treeTitleHeight}px`,\n        userSelect: 'none'\n      }, getDropIndicatorStyle(prefixCls, token)),\n      [`${treeNodeCls}.drop-container`]: {\n        '> [draggable]': {\n          boxShadow: `0 0 0 2px ${token.colorPrimary}`\n        }\n      },\n      // ==================== Show Line =====================\n      '&-show-line': {\n        // ================ Indent lines ================\n        [`${treeCls}-indent`]: {\n          '&-unit': {\n            position: 'relative',\n            height: '100%',\n            '&:before': {\n              position: 'absolute',\n              top: 0,\n              insetInlineEnd: treeTitleHeight / 2,\n              bottom: -treeNodePadding,\n              borderInlineEnd: `1px solid ${token.colorBorder}`,\n              content: '\"\"'\n            },\n            '&-end': {\n              '&:before': {\n                display: 'none'\n              }\n            }\n          }\n        },\n        // ============== Cover Background ==============\n        [`${treeCls}-switcher`]: {\n          background: 'transparent',\n          '&-line-icon': {\n            // https://github.com/ant-design/ant-design/issues/32813\n            verticalAlign: '-0.15em'\n          }\n        }\n      },\n      [`${treeNodeCls}-leaf-last`]: {\n        [`${treeCls}-switcher`]: {\n          '&-leaf-line': {\n            '&:before': {\n              top: 'auto !important',\n              bottom: 'auto !important',\n              height: `${treeTitleHeight / 2}px !important`\n            }\n          }\n        }\n      }\n    })\n  };\n}; // ============================ Directory =============================\n\nexport const genDirectoryStyle = token => {\n  const {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding\n  } = token;\n  return {\n    [`${treeCls}${treeCls}-directory`]: {\n      // ================== TreeNode ==================\n      [treeNodeCls]: {\n        position: 'relative',\n        // Hover color\n        '&:before': {\n          position: 'absolute',\n          top: 0,\n          insetInlineEnd: 0,\n          bottom: treeNodePadding,\n          insetInlineStart: 0,\n          transition: `background-color ${token.motionDurationMid}`,\n          content: '\"\"',\n          pointerEvents: 'none'\n        },\n        '&:hover': {\n          '&:before': {\n            background: token.controlItemBgHover\n          }\n        },\n        // Elements\n        '> *': {\n          zIndex: 1\n        },\n        // >>> Switcher\n        [`${treeCls}-switcher`]: {\n          transition: `color ${token.motionDurationMid}`\n        },\n        // >>> Title\n        [`${treeCls}-node-content-wrapper`]: {\n          borderRadius: 0,\n          userSelect: 'none',\n          '&:hover': {\n            background: 'transparent'\n          },\n          [`&${treeCls}-node-selected`]: {\n            color: token.colorTextLightSolid,\n            background: 'transparent'\n          }\n        },\n        // ============= Selected =============\n        '&-selected': {\n          [`\n            &:hover::before,\n            &::before\n          `]: {\n            background: token.colorPrimary\n          },\n          // >>> Switcher\n          [`${treeCls}-switcher`]: {\n            color: token.colorTextLightSolid\n          },\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            color: token.colorTextLightSolid,\n            background: 'transparent'\n          }\n        }\n      }\n    }\n  };\n}; // ============================== Merged ==============================\n\nexport const genTreeStyle = (prefixCls, token) => {\n  const treeCls = `.${prefixCls}`;\n  const treeNodeCls = `${treeCls}-treenode`;\n  const treeNodePadding = token.paddingXS / 2;\n  const treeTitleHeight = token.controlHeightSM;\n  const treeToken = mergeToken(token, {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding,\n    treeTitleHeight\n  });\n  return [// Basic\n  genBaseStyle(prefixCls, treeToken), // Directory\n  genDirectoryStyle(treeToken)];\n}; // ============================== Export ==============================\n\nexport default genComponentStyleHook('Tree', (token, _ref) => {\n  let {\n    prefixCls\n  } = _ref;\n  return [{\n    [token.componentCls]: getCheckboxStyle(`${prefixCls}-checkbox`, token)\n  }, genTreeStyle(prefixCls, token), genCollapseMotion(token)];\n});","map":{"version":3,"names":["Keyframes","genCollapseMotion","getStyle","getCheckboxStyle","genComponentStyleHook","mergeToken","genFocusOutline","resetComponent","treeNodeFX","opacity","getSwitchStyle","prefixCls","token","display","fontSize","verticalAlign","svg","transition","motionDurationSlow","getDropIndicatorStyle","position","zIndex","height","backgroundColor","colorPrimary","borderRadius","pointerEvents","top","insetInlineStart","width","border","lineWidthBold","content","genBaseStyle","treeCls","treeNodeCls","treeNodePadding","treeTitleHeight","treeCheckBoxMarginVertical","fontSizeLG","treeCheckBoxMarginHorizontal","paddingXS","Object","assign","background","colorBgContainer","transform","alignItems","flex","insetInlineEnd","bottom","animationName","animationDuration","animationPlayState","animationFillMode","padding","outline","direction","color","colorTextDisabled","cursor","fontWeight","lineHeight","textAlign","visibility","alignSelf","whiteSpace","userSelect","margin","marginInlineStart","borderInlineEnd","colorBorder","borderBottom","marginInlineEnd","marginBlockStart","minHeight","motionDurationMid","controlItemBgHover","controlItemBgActive","boxShadow","genDirectoryStyle","colorTextLightSolid","genTreeStyle","controlHeightSM","treeToken","_ref","componentCls"],"sources":["D:/year4sem2/evmos/campaign/node_modules/antd/es/tree/style/index.js"],"sourcesContent":["import { Keyframes } from '@ant-design/cssinjs';\nimport { genCollapseMotion } from '../../style/motion';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genFocusOutline, resetComponent } from '../../style';\n// ============================ Keyframes =============================\nconst treeNodeFX = new Keyframes('ant-tree-node-fx-do-not-use', {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n});\n// ============================== Switch ==============================\nconst getSwitchStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-switcher-icon`]: {\n    display: 'inline-block',\n    fontSize: 10,\n    verticalAlign: 'baseline',\n    svg: {\n      transition: `transform ${token.motionDurationSlow}`\n    }\n  }\n});\n// =============================== Drop ===============================\nconst getDropIndicatorStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-drop-indicator`]: {\n    position: 'absolute',\n    // it should displayed over the following node\n    zIndex: 1,\n    height: 2,\n    backgroundColor: token.colorPrimary,\n    borderRadius: 1,\n    pointerEvents: 'none',\n    '&:after': {\n      position: 'absolute',\n      top: -3,\n      insetInlineStart: -6,\n      width: 8,\n      height: 8,\n      backgroundColor: 'transparent',\n      border: `${token.lineWidthBold}px solid ${token.colorPrimary}`,\n      borderRadius: '50%',\n      content: '\"\"'\n    }\n  }\n});\nexport const genBaseStyle = (prefixCls, token) => {\n  const {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding,\n    treeTitleHeight\n  } = token;\n  const treeCheckBoxMarginVertical = (treeTitleHeight - token.fontSizeLG) / 2;\n  const treeCheckBoxMarginHorizontal = token.paddingXS;\n  return {\n    [treeCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      background: token.colorBgContainer,\n      borderRadius: token.borderRadius,\n      transition: `background-color ${token.motionDurationSlow}`,\n      [`&${treeCls}-rtl`]: {\n        // >>> Switcher\n        [`${treeCls}-switcher`]: {\n          '&_close': {\n            [`${treeCls}-switcher-icon`]: {\n              svg: {\n                transform: 'rotate(90deg)'\n              }\n            }\n          }\n        }\n      },\n      [`&-focused:not(:hover):not(${treeCls}-active-focused)`]: Object.assign({}, genFocusOutline(token)),\n      // =================== Virtual List ===================\n      [`${treeCls}-list-holder-inner`]: {\n        alignItems: 'flex-start'\n      },\n      [`&${treeCls}-block-node`]: {\n        [`${treeCls}-list-holder-inner`]: {\n          alignItems: 'stretch',\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            flex: 'auto'\n          },\n          // >>> Drag\n          [`${treeNodeCls}.dragging`]: {\n            position: 'relative',\n            '&:after': {\n              position: 'absolute',\n              top: 0,\n              insetInlineEnd: 0,\n              bottom: treeNodePadding,\n              insetInlineStart: 0,\n              border: `1px solid ${token.colorPrimary}`,\n              opacity: 0,\n              animationName: treeNodeFX,\n              animationDuration: token.motionDurationSlow,\n              animationPlayState: 'running',\n              animationFillMode: 'forwards',\n              content: '\"\"',\n              pointerEvents: 'none'\n            }\n          }\n        }\n      },\n      // ===================== TreeNode =====================\n      [`${treeNodeCls}`]: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        padding: `0 0 ${treeNodePadding}px 0`,\n        outline: 'none',\n        '&-rtl': {\n          direction: 'rtl'\n        },\n        // Disabled\n        '&-disabled': {\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            color: token.colorTextDisabled,\n            cursor: 'not-allowed',\n            '&:hover': {\n              background: 'transparent'\n            }\n          }\n        },\n        [`&-active ${treeCls}-node-content-wrapper`]: Object.assign({}, genFocusOutline(token)),\n        [`&:not(${treeNodeCls}-disabled).filter-node ${treeCls}-title`]: {\n          color: 'inherit',\n          fontWeight: 500\n        },\n        '&-draggable': {\n          [`${treeCls}-draggable-icon`]: {\n            width: treeTitleHeight,\n            lineHeight: `${treeTitleHeight}px`,\n            textAlign: 'center',\n            visibility: 'visible',\n            opacity: 0.2,\n            transition: `opacity ${token.motionDurationSlow}`,\n            [`${treeNodeCls}:hover &`]: {\n              opacity: 0.45\n            }\n          },\n          [`&${treeNodeCls}-disabled`]: {\n            [`${treeCls}-draggable-icon`]: {\n              visibility: 'hidden'\n            }\n          }\n        }\n      },\n      // >>> Indent\n      [`${treeCls}-indent`]: {\n        alignSelf: 'stretch',\n        whiteSpace: 'nowrap',\n        userSelect: 'none',\n        '&-unit': {\n          display: 'inline-block',\n          width: treeTitleHeight\n        }\n      },\n      // >>> Drag Handler\n      [`${treeCls}-draggable-icon`]: {\n        visibility: 'hidden'\n      },\n      // >>> Switcher\n      [`${treeCls}-switcher`]: Object.assign(Object.assign({}, getSwitchStyle(prefixCls, token)), {\n        position: 'relative',\n        flex: 'none',\n        alignSelf: 'stretch',\n        width: treeTitleHeight,\n        margin: 0,\n        lineHeight: `${treeTitleHeight}px`,\n        textAlign: 'center',\n        cursor: 'pointer',\n        userSelect: 'none',\n        '&-noop': {\n          cursor: 'default'\n        },\n        '&_close': {\n          [`${treeCls}-switcher-icon`]: {\n            svg: {\n              transform: 'rotate(-90deg)'\n            }\n          }\n        },\n        '&-loading-icon': {\n          color: token.colorPrimary\n        },\n        '&-leaf-line': {\n          position: 'relative',\n          zIndex: 1,\n          display: 'inline-block',\n          width: '100%',\n          height: '100%',\n          // https://github.com/ant-design/ant-design/issues/31884\n          '&:before': {\n            position: 'absolute',\n            top: 0,\n            insetInlineEnd: treeTitleHeight / 2,\n            bottom: -treeNodePadding,\n            marginInlineStart: -1,\n            borderInlineEnd: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          },\n          '&:after': {\n            position: 'absolute',\n            width: treeTitleHeight / 2 * 0.8,\n            height: treeTitleHeight / 2,\n            borderBottom: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          }\n        }\n      }),\n      // >>> Checkbox\n      [`${treeCls}-checkbox`]: {\n        top: 'initial',\n        marginInlineEnd: treeCheckBoxMarginHorizontal,\n        marginBlockStart: treeCheckBoxMarginVertical\n      },\n      // >>> Title\n      // add `${treeCls}-checkbox + span` to cover checkbox `${checkboxCls} + span`\n      [`${treeCls}-node-content-wrapper, ${treeCls}-checkbox + span`]: {\n        position: 'relative',\n        zIndex: 'auto',\n        minHeight: treeTitleHeight,\n        margin: 0,\n        padding: `0 ${token.paddingXS / 2}px`,\n        color: 'inherit',\n        lineHeight: `${treeTitleHeight}px`,\n        background: 'transparent',\n        borderRadius: token.borderRadius,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}, border 0s, line-height 0s, box-shadow 0s`,\n        '&:hover': {\n          backgroundColor: token.controlItemBgHover\n        },\n        [`&${treeCls}-node-selected`]: {\n          backgroundColor: token.controlItemBgActive\n        },\n        // Icon\n        [`${treeCls}-iconEle`]: {\n          display: 'inline-block',\n          width: treeTitleHeight,\n          height: treeTitleHeight,\n          lineHeight: `${treeTitleHeight}px`,\n          textAlign: 'center',\n          verticalAlign: 'top',\n          '&:empty': {\n            display: 'none'\n          }\n        }\n      },\n      // https://github.com/ant-design/ant-design/issues/28217\n      [`${treeCls}-unselectable ${treeCls}-node-content-wrapper:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      // ==================== Draggable =====================\n      [`${treeCls}-node-content-wrapper`]: Object.assign({\n        lineHeight: `${treeTitleHeight}px`,\n        userSelect: 'none'\n      }, getDropIndicatorStyle(prefixCls, token)),\n      [`${treeNodeCls}.drop-container`]: {\n        '> [draggable]': {\n          boxShadow: `0 0 0 2px ${token.colorPrimary}`\n        }\n      },\n      // ==================== Show Line =====================\n      '&-show-line': {\n        // ================ Indent lines ================\n        [`${treeCls}-indent`]: {\n          '&-unit': {\n            position: 'relative',\n            height: '100%',\n            '&:before': {\n              position: 'absolute',\n              top: 0,\n              insetInlineEnd: treeTitleHeight / 2,\n              bottom: -treeNodePadding,\n              borderInlineEnd: `1px solid ${token.colorBorder}`,\n              content: '\"\"'\n            },\n            '&-end': {\n              '&:before': {\n                display: 'none'\n              }\n            }\n          }\n        },\n        // ============== Cover Background ==============\n        [`${treeCls}-switcher`]: {\n          background: 'transparent',\n          '&-line-icon': {\n            // https://github.com/ant-design/ant-design/issues/32813\n            verticalAlign: '-0.15em'\n          }\n        }\n      },\n      [`${treeNodeCls}-leaf-last`]: {\n        [`${treeCls}-switcher`]: {\n          '&-leaf-line': {\n            '&:before': {\n              top: 'auto !important',\n              bottom: 'auto !important',\n              height: `${treeTitleHeight / 2}px !important`\n            }\n          }\n        }\n      }\n    })\n  };\n};\n// ============================ Directory =============================\nexport const genDirectoryStyle = token => {\n  const {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding\n  } = token;\n  return {\n    [`${treeCls}${treeCls}-directory`]: {\n      // ================== TreeNode ==================\n      [treeNodeCls]: {\n        position: 'relative',\n        // Hover color\n        '&:before': {\n          position: 'absolute',\n          top: 0,\n          insetInlineEnd: 0,\n          bottom: treeNodePadding,\n          insetInlineStart: 0,\n          transition: `background-color ${token.motionDurationMid}`,\n          content: '\"\"',\n          pointerEvents: 'none'\n        },\n        '&:hover': {\n          '&:before': {\n            background: token.controlItemBgHover\n          }\n        },\n        // Elements\n        '> *': {\n          zIndex: 1\n        },\n        // >>> Switcher\n        [`${treeCls}-switcher`]: {\n          transition: `color ${token.motionDurationMid}`\n        },\n        // >>> Title\n        [`${treeCls}-node-content-wrapper`]: {\n          borderRadius: 0,\n          userSelect: 'none',\n          '&:hover': {\n            background: 'transparent'\n          },\n          [`&${treeCls}-node-selected`]: {\n            color: token.colorTextLightSolid,\n            background: 'transparent'\n          }\n        },\n        // ============= Selected =============\n        '&-selected': {\n          [`\n            &:hover::before,\n            &::before\n          `]: {\n            background: token.colorPrimary\n          },\n          // >>> Switcher\n          [`${treeCls}-switcher`]: {\n            color: token.colorTextLightSolid\n          },\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            color: token.colorTextLightSolid,\n            background: 'transparent'\n          }\n        }\n      }\n    }\n  };\n};\n// ============================== Merged ==============================\nexport const genTreeStyle = (prefixCls, token) => {\n  const treeCls = `.${prefixCls}`;\n  const treeNodeCls = `${treeCls}-treenode`;\n  const treeNodePadding = token.paddingXS / 2;\n  const treeTitleHeight = token.controlHeightSM;\n  const treeToken = mergeToken(token, {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding,\n    treeTitleHeight\n  });\n  return [\n  // Basic\n  genBaseStyle(prefixCls, treeToken),\n  // Directory\n  genDirectoryStyle(treeToken)];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tree', (token, _ref) => {\n  let {\n    prefixCls\n  } = _ref;\n  return [{\n    [token.componentCls]: getCheckboxStyle(`${prefixCls}-checkbox`, token)\n  }, genTreeStyle(prefixCls, token), genCollapseMotion(token)];\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}