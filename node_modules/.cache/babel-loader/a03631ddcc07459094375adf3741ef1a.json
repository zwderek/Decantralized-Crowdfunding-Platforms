{"ast":null,"code":"import useMemo from \"rc-util/es/hooks/useMemo\";\nimport shallowEqual from \"rc-util/es/isEqual\";\nimport { formatValue, isEqual } from \"../utils/dateUtil\";\nexport default function useValueTexts(value, _ref) {\n  var formatList = _ref.formatList,\n      generateConfig = _ref.generateConfig,\n      locale = _ref.locale;\n  return useMemo(function () {\n    if (!value) {\n      return [[''], ''];\n    } // We will convert data format back to first format\n\n\n    var firstValueText = '';\n    var fullValueTexts = [];\n\n    for (var i = 0; i < formatList.length; i += 1) {\n      var format = formatList[i];\n      var formatStr = formatValue(value, {\n        generateConfig: generateConfig,\n        locale: locale,\n        format: format\n      });\n      fullValueTexts.push(formatStr);\n\n      if (i === 0) {\n        firstValueText = formatStr;\n      }\n    }\n\n    return [fullValueTexts, firstValueText];\n  }, [value, formatList], function (prev, next) {\n    return (// Not Same Date\n      !isEqual(generateConfig, prev[0], next[0]) || // Not Same format\n      !shallowEqual(prev[1], next[1], true)\n    );\n  });\n}","map":{"version":3,"names":["useMemo","shallowEqual","formatValue","isEqual","useValueTexts","value","_ref","formatList","generateConfig","locale","firstValueText","fullValueTexts","i","length","format","formatStr","push","prev","next"],"sources":["D:/year4sem2/evmos/campaign/node_modules/rc-picker/es/hooks/useValueTexts.js"],"sourcesContent":["import useMemo from \"rc-util/es/hooks/useMemo\";\nimport shallowEqual from \"rc-util/es/isEqual\";\nimport { formatValue, isEqual } from \"../utils/dateUtil\";\nexport default function useValueTexts(value, _ref) {\n  var formatList = _ref.formatList,\n    generateConfig = _ref.generateConfig,\n    locale = _ref.locale;\n  return useMemo(function () {\n    if (!value) {\n      return [[''], ''];\n    }\n\n    // We will convert data format back to first format\n    var firstValueText = '';\n    var fullValueTexts = [];\n    for (var i = 0; i < formatList.length; i += 1) {\n      var format = formatList[i];\n      var formatStr = formatValue(value, {\n        generateConfig: generateConfig,\n        locale: locale,\n        format: format\n      });\n      fullValueTexts.push(formatStr);\n      if (i === 0) {\n        firstValueText = formatStr;\n      }\n    }\n    return [fullValueTexts, firstValueText];\n  }, [value, formatList], function (prev, next) {\n    return (\n      // Not Same Date\n      !isEqual(generateConfig, prev[0], next[0]) ||\n      // Not Same format\n      !shallowEqual(prev[1], next[1], true)\n    );\n  });\n}"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,0BAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,mBAArC;AACA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAoC;EACjD,IAAIC,UAAU,GAAGD,IAAI,CAACC,UAAtB;EAAA,IACEC,cAAc,GAAGF,IAAI,CAACE,cADxB;EAAA,IAEEC,MAAM,GAAGH,IAAI,CAACG,MAFhB;EAGA,OAAOT,OAAO,CAAC,YAAY;IACzB,IAAI,CAACK,KAAL,EAAY;MACV,OAAO,CAAC,CAAC,EAAD,CAAD,EAAO,EAAP,CAAP;IACD,CAHwB,CAKzB;;;IACA,IAAIK,cAAc,GAAG,EAArB;IACA,IAAIC,cAAc,GAAG,EAArB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,UAAU,CAACM,MAA/B,EAAuCD,CAAC,IAAI,CAA5C,EAA+C;MAC7C,IAAIE,MAAM,GAAGP,UAAU,CAACK,CAAD,CAAvB;MACA,IAAIG,SAAS,GAAGb,WAAW,CAACG,KAAD,EAAQ;QACjCG,cAAc,EAAEA,cADiB;QAEjCC,MAAM,EAAEA,MAFyB;QAGjCK,MAAM,EAAEA;MAHyB,CAAR,CAA3B;MAKAH,cAAc,CAACK,IAAf,CAAoBD,SAApB;;MACA,IAAIH,CAAC,KAAK,CAAV,EAAa;QACXF,cAAc,GAAGK,SAAjB;MACD;IACF;;IACD,OAAO,CAACJ,cAAD,EAAiBD,cAAjB,CAAP;EACD,CArBa,EAqBX,CAACL,KAAD,EAAQE,UAAR,CArBW,EAqBU,UAAUU,IAAV,EAAgBC,IAAhB,EAAsB;IAC5C,OACE;MACA,CAACf,OAAO,CAACK,cAAD,EAAiBS,IAAI,CAAC,CAAD,CAArB,EAA0BC,IAAI,CAAC,CAAD,CAA9B,CAAR,IACA;MACA,CAACjB,YAAY,CAACgB,IAAI,CAAC,CAAD,CAAL,EAAUC,IAAI,CAAC,CAAD,CAAd,EAAmB,IAAnB;IAJf;EAMD,CA5Ba,CAAd;AA6BD"},"metadata":{},"sourceType":"module"}