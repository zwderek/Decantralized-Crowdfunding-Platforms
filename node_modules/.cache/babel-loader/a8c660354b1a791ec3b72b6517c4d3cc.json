{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport copy from 'copy-to-clipboard';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport { useLocaleReceiver } from '../../locale/LocaleReceiver';\nimport TransButton from '../../_util/transButton';\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport Tooltip from '../../tooltip';\nimport Editable from '../Editable';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Typography from '../Typography';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\n\nfunction wrapperDecorations(_ref, content) {\n  let {\n    mark,\n    code,\n    underline,\n    delete: del,\n    strong,\n    keyboard,\n    italic\n  } = _ref;\n  let currentContent = content;\n\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\n\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n\n  return dom || needDom && defaultNode;\n}\n\nfunction toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n\n  return Array.isArray(val) ? val : [val];\n}\n\nconst ELLIPSIS_STR = '...';\nconst Base = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a, _b, _c;\n\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    style,\n    type,\n    disabled,\n    children,\n    ellipsis,\n    editable,\n    copyable,\n    component,\n    title\n  } = props,\n        restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const textLocale = useLocaleReceiver('Text')[0]; // Force TS get this\n\n  const typographyRef = React.useRef(null);\n  const editIconRef = React.useRef(null); // ============================ MISC ============================\n\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  const textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']); // ========================== Editable ==========================\n\n  const [enableEdit, editConfig] = useMergedConfig(editable);\n  const [editing, setEditing] = useMergedState(false, {\n    value: editConfig.editing\n  });\n  const {\n    triggerType = ['icon']\n  } = editConfig;\n\n  const triggerEdit = edit => {\n    var _a;\n\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n\n    setEditing(edit);\n  }; // Focus edit icon when back\n\n\n  useUpdatedEffect(() => {\n    var _a;\n\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n\n  const onEditClick = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n\n  const onEditChange = value => {\n    var _a;\n\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n\n  const onEditCancel = () => {\n    var _a;\n\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  }; // ========================== Copyable ==========================\n\n\n  const [enableCopy, copyConfig] = useMergedConfig(copyable);\n  const [copied, setCopied] = React.useState(false);\n  const copyIdRef = React.useRef();\n  const copyOptions = {};\n\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n\n  const cleanCopyId = () => {\n    window.clearTimeout(copyIdRef.current);\n  };\n\n  const onCopyClick = e => {\n    var _a;\n\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    copy(copyConfig.text || String(children) || '', copyOptions);\n    setCopied(true); // Trigger tips update\n\n    cleanCopyId();\n    copyIdRef.current = window.setTimeout(() => {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n  };\n\n  React.useEffect(() => cleanCopyId, []); // ========================== Ellipsis ==========================\n\n  const [isLineClampSupport, setIsLineClampSupport] = React.useState(false);\n  const [isTextOverflowSupport, setIsTextOverflowSupport] = React.useState(false);\n  const [expanded, setExpanded] = React.useState(false);\n  const [isJsEllipsis, setIsJsEllipsis] = React.useState(false);\n  const [isNativeEllipsis, setIsNativeEllipsis] = React.useState(false);\n  const [isNativeVisible, setIsNativeVisible] = React.useState(true);\n  const [enableEllipsis, ellipsisConfig] = useMergedConfig(ellipsis, {\n    expandable: false\n  });\n  const mergedEnableEllipsis = enableEllipsis && !expanded; // Shared prop to reduce bundle size\n\n  const {\n    rows = 1\n  } = ellipsisConfig;\n  const needMeasureEllipsis = React.useMemo(() => // Disable ellipsis\n  !mergedEnableEllipsis || // Provide suffix\n  ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis || // Can't use css ellipsis since we need to provide the place for button\n  ellipsisConfig.expandable || enableEdit || enableCopy, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useIsomorphicLayoutEffect(() => {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  const cssEllipsis = React.useMemo(() => {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  const isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  const cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  const cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis; // >>>>> Expand\n\n  const onExpandClick = e => {\n    var _a;\n\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n\n  const [ellipsisWidth, setEllipsisWidth] = React.useState(0);\n  const [ellipsisFontSize, setEllipsisFontSize] = React.useState(0);\n\n  const onResize = (_ref2, element) => {\n    let {\n      offsetWidth\n    } = _ref2;\n\n    var _a;\n\n    setEllipsisWidth(offsetWidth);\n    setEllipsisFontSize(parseInt((_a = window.getComputedStyle) === null || _a === void 0 ? void 0 : _a.call(window, element).fontSize, 10) || 0);\n  }; // >>>>> JS Ellipsis\n\n\n  const onJsEllipsis = jsEllipsis => {\n    var _a;\n\n    setIsJsEllipsis(jsEllipsis); // Trigger if changed\n\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  }; // >>>>> Native ellipsis\n\n\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n\n    if (enableEllipsis && cssEllipsis && textEle) {\n      const currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible]); // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n\n\n    const observer = new IntersectionObserver(() => {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return () => {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]); // ========================== Tooltip ===========================\n\n  let tooltipProps = {};\n\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: (_a = editConfig.text) !== null && _a !== void 0 ? _a : children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (typeof ellipsisConfig.tooltip === 'object') {\n    tooltipProps = Object.assign({\n      title: (_b = editConfig.text) !== null && _b !== void 0 ? _b : children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n\n  const topAriaLabel = React.useMemo(() => {\n    const isValid = val => ['string', 'number'].includes(typeof val);\n\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n\n    if (isValid(editConfig.text)) {\n      return editConfig.text;\n    }\n\n    if (isValid(children)) {\n      return children;\n    }\n\n    if (isValid(title)) {\n      return title;\n    }\n\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]); // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: (_c = editConfig.text) !== null && _c !== void 0 ? _c : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  } // >>>>>>>>>>> Typography\n  // Expand\n\n\n  const renderExpand = () => {\n    const {\n      expandable,\n      symbol\n    } = ellipsisConfig;\n    if (!expandable) return null;\n    let expandContent;\n\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale.expand;\n    }\n\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: `${prefixCls}-expand`,\n      onClick: onExpandClick,\n      \"aria-label\": textLocale.expand\n    }, expandContent);\n  }; // Edit\n\n\n  const renderEdit = () => {\n    if (!enableEdit) return;\n    const {\n      icon,\n      tooltip\n    } = editConfig;\n    const editTitle = toArray(tooltip)[0] || textLocale.edit;\n    const ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: `${prefixCls}-edit`,\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    }))) : null;\n  }; // Copy\n\n\n  const renderCopy = () => {\n    if (!enableCopy) return;\n    const {\n      tooltips,\n      icon\n    } = copyConfig;\n    const tooltipNodes = toList(tooltips);\n    const iconNodes = toList(icon);\n    const copyTitle = copied ? getNode(tooltipNodes[1], textLocale.copied) : getNode(tooltipNodes[0], textLocale.copy);\n    const systemStr = copied ? textLocale.copied : textLocale.copy;\n    const ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      className: classNames(`${prefixCls}-copy`, copied && `${prefixCls}-copy-success`),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n  };\n\n  const renderOperations = renderExpanded => [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n\n  const renderEllipsis = needEllipsis => [needEllipsis && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    key: \"ellipsis\"\n  }, ELLIPSIS_STR), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis || cssEllipsis\n  }, resizeRef => /*#__PURE__*/React.createElement(EllipsisTooltip, {\n    tooltipProps: tooltipProps,\n    enabledEllipsis: mergedEnableEllipsis,\n    isEllipsis: isMergedEllipsis\n  }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n    className: classNames({\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-ellipsis`]: enableEllipsis,\n      [`${prefixCls}-single-line`]: mergedEnableEllipsis && rows === 1,\n      [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n      [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp\n    }, className),\n    prefixCls: customizePrefixCls,\n    style: Object.assign(Object.assign({}, style), {\n      WebkitLineClamp: cssLineClamp ? rows : undefined\n    }),\n    component: component,\n    ref: composeRef(resizeRef, typographyRef, ref),\n    direction: direction,\n    onClick: triggerType.includes('text') ? onEditClick : undefined,\n    \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n    title: title\n  }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n    enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n    text: children,\n    rows: rows,\n    width: ellipsisWidth,\n    fontSize: ellipsisFontSize,\n    onEllipsis: onJsEllipsis\n  }, (node, needEllipsis) => {\n    let renderNode = node;\n\n    if (node.length && needEllipsis && topAriaLabel) {\n      renderNode = /*#__PURE__*/React.createElement(\"span\", {\n        key: \"show-content\",\n        \"aria-hidden\": true\n      }, renderNode);\n    }\n\n    const wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n    return wrappedContext;\n  }))));\n});\nexport default Base;","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","CheckOutlined","CopyOutlined","EditOutlined","classNames","copy","ResizeObserver","toArray","useIsomorphicLayoutEffect","useMergedState","omit","composeRef","React","ConfigContext","useLocaleReceiver","TransButton","isStyleSupport","Tooltip","Editable","useMergedConfig","useUpdatedEffect","Typography","Ellipsis","EllipsisTooltip","wrapperDecorations","_ref","content","mark","code","underline","delete","del","strong","keyboard","italic","currentContent","wrap","tag","needed","createElement","getNode","dom","defaultNode","needDom","undefined","toList","val","Array","isArray","ELLIPSIS_STR","Base","forwardRef","props","ref","_a","_b","_c","prefixCls","customizePrefixCls","className","style","type","disabled","children","ellipsis","editable","copyable","component","title","restProps","getPrefixCls","direction","useContext","textLocale","typographyRef","useRef","editIconRef","textProps","enableEdit","editConfig","editing","setEditing","value","triggerType","triggerEdit","edit","onStart","current","focus","onEditClick","preventDefault","onEditChange","onChange","onEditCancel","onCancel","enableCopy","copyConfig","copied","setCopied","useState","copyIdRef","copyOptions","format","cleanCopyId","window","clearTimeout","onCopyClick","stopPropagation","text","String","setTimeout","onCopy","useEffect","isLineClampSupport","setIsLineClampSupport","isTextOverflowSupport","setIsTextOverflowSupport","expanded","setExpanded","isJsEllipsis","setIsJsEllipsis","isNativeEllipsis","setIsNativeEllipsis","isNativeVisible","setIsNativeVisible","enableEllipsis","ellipsisConfig","expandable","mergedEnableEllipsis","rows","needMeasureEllipsis","useMemo","suffix","onEllipsis","cssEllipsis","isMergedEllipsis","cssTextOverflow","cssLineClamp","onExpandClick","onExpand","ellipsisWidth","setEllipsisWidth","ellipsisFontSize","setEllipsisFontSize","onResize","_ref2","element","offsetWidth","parseInt","getComputedStyle","fontSize","onJsEllipsis","jsEllipsis","textEle","currentEllipsis","offsetHeight","scrollHeight","scrollWidth","IntersectionObserver","observer","offsetParent","observe","disconnect","tooltipProps","tooltip","isValidElement","assign","topAriaLabel","isValid","includes","onSave","onEnd","maxLength","autoSize","enterIcon","renderExpand","symbol","expandContent","expand","key","onClick","renderEdit","icon","editTitle","ariaLabel","role","renderCopy","tooltips","tooltipNodes","iconNodes","copyTitle","systemStr","renderOperations","renderExpanded","renderEllipsis","needEllipsis","resizeRef","enabledEllipsis","isEllipsis","WebkitLineClamp","toString","enabledMeasure","width","node","renderNode","wrappedContext","Fragment"],"sources":["D:/year4sem2/evmos/campaign/node_modules/antd/es/typography/Base/index.js"],"sourcesContent":["var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport copy from 'copy-to-clipboard';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport { useLocaleReceiver } from '../../locale/LocaleReceiver';\nimport TransButton from '../../_util/transButton';\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport Tooltip from '../../tooltip';\nimport Editable from '../Editable';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Typography from '../Typography';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\nfunction wrapperDecorations(_ref, content) {\n  let {\n    mark,\n    code,\n    underline,\n    delete: del,\n    strong,\n    keyboard,\n    italic\n  } = _ref;\n  let currentContent = content;\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n  return dom || needDom && defaultNode;\n}\nfunction toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n  return Array.isArray(val) ? val : [val];\n}\nconst ELLIPSIS_STR = '...';\nconst Base = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a, _b, _c;\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      style,\n      type,\n      disabled,\n      children,\n      ellipsis,\n      editable,\n      copyable,\n      component,\n      title\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const textLocale = useLocaleReceiver('Text')[0]; // Force TS get this\n  const typographyRef = React.useRef(null);\n  const editIconRef = React.useRef(null);\n  // ============================ MISC ============================\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  const textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']);\n  // ========================== Editable ==========================\n  const [enableEdit, editConfig] = useMergedConfig(editable);\n  const [editing, setEditing] = useMergedState(false, {\n    value: editConfig.editing\n  });\n  const {\n    triggerType = ['icon']\n  } = editConfig;\n  const triggerEdit = edit => {\n    var _a;\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n    setEditing(edit);\n  };\n  // Focus edit icon when back\n  useUpdatedEffect(() => {\n    var _a;\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n  const onEditClick = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n  const onEditChange = value => {\n    var _a;\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n  const onEditCancel = () => {\n    var _a;\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  };\n  // ========================== Copyable ==========================\n  const [enableCopy, copyConfig] = useMergedConfig(copyable);\n  const [copied, setCopied] = React.useState(false);\n  const copyIdRef = React.useRef();\n  const copyOptions = {};\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n  const cleanCopyId = () => {\n    window.clearTimeout(copyIdRef.current);\n  };\n  const onCopyClick = e => {\n    var _a;\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    copy(copyConfig.text || String(children) || '', copyOptions);\n    setCopied(true);\n    // Trigger tips update\n    cleanCopyId();\n    copyIdRef.current = window.setTimeout(() => {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n  };\n  React.useEffect(() => cleanCopyId, []);\n  // ========================== Ellipsis ==========================\n  const [isLineClampSupport, setIsLineClampSupport] = React.useState(false);\n  const [isTextOverflowSupport, setIsTextOverflowSupport] = React.useState(false);\n  const [expanded, setExpanded] = React.useState(false);\n  const [isJsEllipsis, setIsJsEllipsis] = React.useState(false);\n  const [isNativeEllipsis, setIsNativeEllipsis] = React.useState(false);\n  const [isNativeVisible, setIsNativeVisible] = React.useState(true);\n  const [enableEllipsis, ellipsisConfig] = useMergedConfig(ellipsis, {\n    expandable: false\n  });\n  const mergedEnableEllipsis = enableEllipsis && !expanded;\n  // Shared prop to reduce bundle size\n  const {\n    rows = 1\n  } = ellipsisConfig;\n  const needMeasureEllipsis = React.useMemo(() =>\n  // Disable ellipsis\n  !mergedEnableEllipsis ||\n  // Provide suffix\n  ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis ||\n  // Can't use css ellipsis since we need to provide the place for button\n  ellipsisConfig.expandable || enableEdit || enableCopy, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useIsomorphicLayoutEffect(() => {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  const cssEllipsis = React.useMemo(() => {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  const isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  const cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  const cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis;\n  // >>>>> Expand\n  const onExpandClick = e => {\n    var _a;\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n  const [ellipsisWidth, setEllipsisWidth] = React.useState(0);\n  const [ellipsisFontSize, setEllipsisFontSize] = React.useState(0);\n  const onResize = (_ref2, element) => {\n    let {\n      offsetWidth\n    } = _ref2;\n    var _a;\n    setEllipsisWidth(offsetWidth);\n    setEllipsisFontSize(parseInt((_a = window.getComputedStyle) === null || _a === void 0 ? void 0 : _a.call(window, element).fontSize, 10) || 0);\n  };\n  // >>>>> JS Ellipsis\n  const onJsEllipsis = jsEllipsis => {\n    var _a;\n    setIsJsEllipsis(jsEllipsis);\n    // Trigger if changed\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  };\n  // >>>>> Native ellipsis\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (enableEllipsis && cssEllipsis && textEle) {\n      const currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible]);\n  // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n    const observer = new IntersectionObserver(() => {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return () => {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]);\n  // ========================== Tooltip ===========================\n  let tooltipProps = {};\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: (_a = editConfig.text) !== null && _a !== void 0 ? _a : children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (typeof ellipsisConfig.tooltip === 'object') {\n    tooltipProps = Object.assign({\n      title: (_b = editConfig.text) !== null && _b !== void 0 ? _b : children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n  const topAriaLabel = React.useMemo(() => {\n    const isValid = val => ['string', 'number'].includes(typeof val);\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n    if (isValid(editConfig.text)) {\n      return editConfig.text;\n    }\n    if (isValid(children)) {\n      return children;\n    }\n    if (isValid(title)) {\n      return title;\n    }\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]);\n  // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: (_c = editConfig.text) !== null && _c !== void 0 ? _c : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  }\n  // >>>>>>>>>>> Typography\n  // Expand\n  const renderExpand = () => {\n    const {\n      expandable,\n      symbol\n    } = ellipsisConfig;\n    if (!expandable) return null;\n    let expandContent;\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale.expand;\n    }\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: `${prefixCls}-expand`,\n      onClick: onExpandClick,\n      \"aria-label\": textLocale.expand\n    }, expandContent);\n  };\n  // Edit\n  const renderEdit = () => {\n    if (!enableEdit) return;\n    const {\n      icon,\n      tooltip\n    } = editConfig;\n    const editTitle = toArray(tooltip)[0] || textLocale.edit;\n    const ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: `${prefixCls}-edit`,\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    }))) : null;\n  };\n  // Copy\n  const renderCopy = () => {\n    if (!enableCopy) return;\n    const {\n      tooltips,\n      icon\n    } = copyConfig;\n    const tooltipNodes = toList(tooltips);\n    const iconNodes = toList(icon);\n    const copyTitle = copied ? getNode(tooltipNodes[1], textLocale.copied) : getNode(tooltipNodes[0], textLocale.copy);\n    const systemStr = copied ? textLocale.copied : textLocale.copy;\n    const ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      className: classNames(`${prefixCls}-copy`, copied && `${prefixCls}-copy-success`),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n  };\n  const renderOperations = renderExpanded => [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n  const renderEllipsis = needEllipsis => [needEllipsis && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    key: \"ellipsis\"\n  }, ELLIPSIS_STR), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis || cssEllipsis\n  }, resizeRef => /*#__PURE__*/React.createElement(EllipsisTooltip, {\n    tooltipProps: tooltipProps,\n    enabledEllipsis: mergedEnableEllipsis,\n    isEllipsis: isMergedEllipsis\n  }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n    className: classNames({\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-ellipsis`]: enableEllipsis,\n      [`${prefixCls}-single-line`]: mergedEnableEllipsis && rows === 1,\n      [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n      [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp\n    }, className),\n    prefixCls: customizePrefixCls,\n    style: Object.assign(Object.assign({}, style), {\n      WebkitLineClamp: cssLineClamp ? rows : undefined\n    }),\n    component: component,\n    ref: composeRef(resizeRef, typographyRef, ref),\n    direction: direction,\n    onClick: triggerType.includes('text') ? onEditClick : undefined,\n    \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n    title: title\n  }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n    enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n    text: children,\n    rows: rows,\n    width: ellipsisWidth,\n    fontSize: ellipsisFontSize,\n    onEllipsis: onJsEllipsis\n  }, (node, needEllipsis) => {\n    let renderNode = node;\n    if (node.length && needEllipsis && topAriaLabel) {\n      renderNode = /*#__PURE__*/React.createElement(\"span\", {\n        key: \"show-content\",\n        \"aria-hidden\": true\n      }, renderNode);\n    }\n    const wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n    return wrappedContext;\n  }))));\n});\nexport default Base;"],"mappings":"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"},"metadata":{},"sourceType":"module"}