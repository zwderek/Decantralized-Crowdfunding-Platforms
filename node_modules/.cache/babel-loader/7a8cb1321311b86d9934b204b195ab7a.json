{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport { Field, FieldContext, ListContext } from 'rc-field-form';\nimport useState from \"rc-util/es/hooks/useState\";\nimport { supportRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport useFormItemStatus from '../hooks/useFormItemStatus';\nimport { ConfigContext } from '../../config-provider';\nimport { cloneElement, isValidElement } from '../../_util/reactNode';\nimport warning from '../../_util/warning';\nimport { FormContext, NoStyleItemContext } from '../context';\nimport useFrameState from '../hooks/useFrameState';\nimport useItemRef from '../hooks/useItemRef';\nimport { getFieldId, toArray } from '../util';\nimport ItemHolder from './ItemHolder';\nimport useStyle from '../style';\nconst NAME_SPLIT = '__SPLIT__';\nconst ValidateStatuses = ['success', 'warning', 'error', 'validating', ''];\nconst MemoInput = /*#__PURE__*/React.memo(_ref => {\n  let {\n    children\n  } = _ref;\n  return children;\n}, (prev, next) => prev.value === next.value && prev.update === next.update && prev.childProps.length === next.childProps.length && prev.childProps.every((value, index) => value === next.childProps[index]));\n\nfunction hasValidName(name) {\n  if (name === null) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'Form.Item', '`null` is passed as `name` property') : void 0;\n  }\n\n  return !(name === undefined || name === null);\n}\n\nfunction genEmptyMeta() {\n  return {\n    errors: [],\n    warnings: [],\n    touched: false,\n    validating: false,\n    name: []\n  };\n}\n\nfunction InternalFormItem(props) {\n  const {\n    name,\n    noStyle,\n    className,\n    dependencies,\n    prefixCls: customizePrefixCls,\n    shouldUpdate,\n    rules,\n    children,\n    required,\n    label,\n    messageVariables,\n    trigger = 'onChange',\n    validateTrigger,\n    hidden\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const {\n    name: formName\n  } = React.useContext(FormContext);\n  const isRenderProps = typeof children === 'function';\n  const notifyParentMetaChange = React.useContext(NoStyleItemContext);\n  const {\n    validateTrigger: contextValidateTrigger\n  } = React.useContext(FieldContext);\n  const mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : contextValidateTrigger;\n  const hasName = hasValidName(name);\n  const prefixCls = getPrefixCls('form', customizePrefixCls); // Style\n\n  const [wrapSSR, hashId] = useStyle(prefixCls); // ========================= MISC =========================\n  // Get `noStyle` required info\n\n  const listContext = React.useContext(ListContext);\n  const fieldKeyPathRef = React.useRef(); // ======================== Errors ========================\n  // >>>>> Collect sub field errors\n\n  const [subFieldErrors, setSubFieldErrors] = useFrameState({}); // >>>>> Current field errors\n\n  const [meta, setMeta] = useState(() => genEmptyMeta());\n\n  const onMetaChange = nextMeta => {\n    // This keyInfo is not correct when field is removed\n    // Since origin keyManager no longer keep the origin key anymore\n    // Which means we need cache origin one and reuse when removed\n    const keyInfo = listContext === null || listContext === void 0 ? void 0 : listContext.getKey(nextMeta.name); // Destroy will reset all the meta\n\n    setMeta(nextMeta.destroy ? genEmptyMeta() : nextMeta, true); // Bump to parent since noStyle\n\n    if (noStyle && notifyParentMetaChange) {\n      let namePath = nextMeta.name;\n\n      if (!nextMeta.destroy) {\n        if (keyInfo !== undefined) {\n          const [fieldKey, restPath] = keyInfo;\n          namePath = [fieldKey].concat(_toConsumableArray(restPath));\n          fieldKeyPathRef.current = namePath;\n        }\n      } else {\n        // Use origin cache data\n        namePath = fieldKeyPathRef.current || namePath;\n      }\n\n      notifyParentMetaChange(nextMeta, namePath);\n    }\n  }; // >>>>> Collect noStyle Field error to the top FormItem\n\n\n  const onSubItemMetaChange = (subMeta, uniqueKeys) => {\n    // Only `noStyle` sub item will trigger\n    setSubFieldErrors(prevSubFieldErrors => {\n      const clone = Object.assign({}, prevSubFieldErrors); // name: ['user', 1] + key: [4] = ['user', 4]\n\n      const mergedNamePath = [].concat(_toConsumableArray(subMeta.name.slice(0, -1)), _toConsumableArray(uniqueKeys));\n      const mergedNameKey = mergedNamePath.join(NAME_SPLIT);\n\n      if (subMeta.destroy) {\n        // Remove\n        delete clone[mergedNameKey];\n      } else {\n        // Update\n        clone[mergedNameKey] = subMeta;\n      }\n\n      return clone;\n    });\n  }; // >>>>> Get merged errors\n\n\n  const [mergedErrors, mergedWarnings] = React.useMemo(() => {\n    const errorList = _toConsumableArray(meta.errors);\n\n    const warningList = _toConsumableArray(meta.warnings);\n\n    Object.values(subFieldErrors).forEach(subFieldError => {\n      errorList.push.apply(errorList, _toConsumableArray(subFieldError.errors || []));\n      warningList.push.apply(warningList, _toConsumableArray(subFieldError.warnings || []));\n    });\n    return [errorList, warningList];\n  }, [subFieldErrors, meta.errors, meta.warnings]); // ===================== Children Ref =====================\n\n  const getItemRef = useItemRef(); // ======================== Render ========================\n\n  function renderLayout(baseChildren, fieldId, isRequired) {\n    if (noStyle && !hidden) {\n      return baseChildren;\n    }\n\n    return /*#__PURE__*/React.createElement(ItemHolder, Object.assign({\n      key: \"row\"\n    }, props, {\n      className: classNames(className, hashId),\n      prefixCls: prefixCls,\n      fieldId: fieldId,\n      isRequired: isRequired,\n      errors: mergedErrors,\n      warnings: mergedWarnings,\n      meta: meta,\n      onSubItemMetaChange: onSubItemMetaChange\n    }), baseChildren);\n  }\n\n  if (!hasName && !isRenderProps && !dependencies) {\n    return wrapSSR(renderLayout(children));\n  }\n\n  let variables = {};\n\n  if (typeof label === 'string') {\n    variables.label = label;\n  } else if (name) {\n    variables.label = String(name);\n  }\n\n  if (messageVariables) {\n    variables = Object.assign(Object.assign({}, variables), messageVariables);\n  } // >>>>> With Field\n\n\n  return wrapSSR( /*#__PURE__*/React.createElement(Field, Object.assign({}, props, {\n    messageVariables: variables,\n    trigger: trigger,\n    validateTrigger: mergedValidateTrigger,\n    onMetaChange: onMetaChange\n  }), (control, renderMeta, context) => {\n    const mergedName = toArray(name).length && renderMeta ? renderMeta.name : [];\n    const fieldId = getFieldId(mergedName, formName);\n    const isRequired = required !== undefined ? required : !!(rules && rules.some(rule => {\n      if (rule && typeof rule === 'object' && rule.required && !rule.warningOnly) {\n        return true;\n      }\n\n      if (typeof rule === 'function') {\n        const ruleEntity = rule(context);\n        return ruleEntity && ruleEntity.required && !ruleEntity.warningOnly;\n      }\n\n      return false;\n    })); // ======================= Children =======================\n\n    const mergedControl = Object.assign({}, control);\n    let childNode = null;\n    process.env.NODE_ENV !== \"production\" ? warning(!(shouldUpdate && dependencies), 'Form.Item', \"`shouldUpdate` and `dependencies` shouldn't be used together. See https://u.ant.design/form-deps.\") : void 0;\n\n    if (Array.isArray(children) && hasName) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Form.Item', 'A `Form.Item` with a `name` prop must have a single child element. For information on how to render more complex form items, see https://u.ant.design/complex-form-item.') : void 0;\n      childNode = children;\n    } else if (isRenderProps && (!(shouldUpdate || dependencies) || hasName)) {\n      process.env.NODE_ENV !== \"production\" ? warning(!!(shouldUpdate || dependencies), 'Form.Item', 'A `Form.Item` with a render function must have either `shouldUpdate` or `dependencies`.') : void 0;\n      process.env.NODE_ENV !== \"production\" ? warning(!hasName, 'Form.Item', 'A `Form.Item` with a render function cannot be a field, and thus cannot have a `name` prop.') : void 0;\n    } else if (dependencies && !isRenderProps && !hasName) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Form.Item', 'Must set `name` or use a render function when `dependencies` is set.') : void 0;\n    } else if (isValidElement(children)) {\n      process.env.NODE_ENV !== \"production\" ? warning(children.props.defaultValue === undefined, 'Form.Item', '`defaultValue` will not work on controlled Field. You should use `initialValues` of Form instead.') : void 0;\n      const childProps = Object.assign(Object.assign({}, children.props), mergedControl);\n\n      if (!childProps.id) {\n        childProps.id = fieldId;\n      }\n\n      if (props.help || mergedErrors.length > 0 || mergedWarnings.length > 0 || props.extra) {\n        const describedbyArr = [];\n\n        if (props.help || mergedErrors.length > 0) {\n          describedbyArr.push(`${fieldId}_help`);\n        }\n\n        if (props.extra) {\n          describedbyArr.push(`${fieldId}_extra`);\n        }\n\n        childProps['aria-describedby'] = describedbyArr.join(' ');\n      }\n\n      if (mergedErrors.length > 0) {\n        childProps['aria-invalid'] = 'true';\n      }\n\n      if (isRequired) {\n        childProps['aria-required'] = 'true';\n      }\n\n      if (supportRef(children)) {\n        childProps.ref = getItemRef(mergedName, children);\n      } // We should keep user origin event handler\n\n\n      const triggers = new Set([].concat(_toConsumableArray(toArray(trigger)), _toConsumableArray(toArray(mergedValidateTrigger))));\n      triggers.forEach(eventName => {\n        childProps[eventName] = function () {\n          var _a2, _c2;\n\n          var _a, _b, _c;\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          (_a = mergedControl[eventName]) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [mergedControl].concat(args));\n          (_c = (_b = children.props)[eventName]) === null || _c === void 0 ? void 0 : (_c2 = _c).call.apply(_c2, [_b].concat(args));\n        };\n      }); // List of props that need to be watched for changes -> if changes are detected in MemoInput -> rerender\n\n      const watchingChildProps = [childProps['aria-required'], childProps['aria-invalid'], childProps['aria-describedby']];\n      childNode = /*#__PURE__*/React.createElement(MemoInput, {\n        value: mergedControl[props.valuePropName || 'value'],\n        update: children,\n        childProps: watchingChildProps\n      }, cloneElement(children, childProps));\n    } else if (isRenderProps && (shouldUpdate || dependencies) && !hasName) {\n      childNode = children(context);\n    } else {\n      process.env.NODE_ENV !== \"production\" ? warning(!mergedName.length, 'Form.Item', '`name` is only used for validate React element. If you are using Form.Item as layout display, please remove `name` instead.') : void 0;\n      childNode = children;\n    }\n\n    return renderLayout(childNode, fieldId, isRequired);\n  }));\n}\n\nconst FormItem = InternalFormItem;\nFormItem.useStatus = useFormItemStatus;\nexport default FormItem;","map":{"version":3,"names":["_toConsumableArray","classNames","Field","FieldContext","ListContext","useState","supportRef","React","useFormItemStatus","ConfigContext","cloneElement","isValidElement","warning","FormContext","NoStyleItemContext","useFrameState","useItemRef","getFieldId","toArray","ItemHolder","useStyle","NAME_SPLIT","ValidateStatuses","MemoInput","memo","_ref","children","prev","next","value","update","childProps","length","every","index","hasValidName","name","process","env","NODE_ENV","undefined","genEmptyMeta","errors","warnings","touched","validating","InternalFormItem","props","noStyle","className","dependencies","prefixCls","customizePrefixCls","shouldUpdate","rules","required","label","messageVariables","trigger","validateTrigger","hidden","getPrefixCls","useContext","formName","isRenderProps","notifyParentMetaChange","contextValidateTrigger","mergedValidateTrigger","hasName","wrapSSR","hashId","listContext","fieldKeyPathRef","useRef","subFieldErrors","setSubFieldErrors","meta","setMeta","onMetaChange","nextMeta","keyInfo","getKey","destroy","namePath","fieldKey","restPath","concat","current","onSubItemMetaChange","subMeta","uniqueKeys","prevSubFieldErrors","clone","Object","assign","mergedNamePath","slice","mergedNameKey","join","mergedErrors","mergedWarnings","useMemo","errorList","warningList","values","forEach","subFieldError","push","apply","getItemRef","renderLayout","baseChildren","fieldId","isRequired","createElement","key","variables","String","control","renderMeta","context","mergedName","some","rule","warningOnly","ruleEntity","mergedControl","childNode","Array","isArray","defaultValue","id","help","extra","describedbyArr","ref","triggers","Set","eventName","_a2","_c2","_a","_b","_c","_len","arguments","args","_key","call","watchingChildProps","valuePropName","FormItem","useStatus"],"sources":["D:/year4sem2/evmos/campaign/node_modules/antd/es/form/FormItem/index.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport { Field, FieldContext, ListContext } from 'rc-field-form';\nimport useState from \"rc-util/es/hooks/useState\";\nimport { supportRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport useFormItemStatus from '../hooks/useFormItemStatus';\nimport { ConfigContext } from '../../config-provider';\nimport { cloneElement, isValidElement } from '../../_util/reactNode';\nimport warning from '../../_util/warning';\nimport { FormContext, NoStyleItemContext } from '../context';\nimport useFrameState from '../hooks/useFrameState';\nimport useItemRef from '../hooks/useItemRef';\nimport { getFieldId, toArray } from '../util';\nimport ItemHolder from './ItemHolder';\nimport useStyle from '../style';\nconst NAME_SPLIT = '__SPLIT__';\nconst ValidateStatuses = ['success', 'warning', 'error', 'validating', ''];\nconst MemoInput = /*#__PURE__*/React.memo(_ref => {\n  let {\n    children\n  } = _ref;\n  return children;\n}, (prev, next) => prev.value === next.value && prev.update === next.update && prev.childProps.length === next.childProps.length && prev.childProps.every((value, index) => value === next.childProps[index]));\nfunction hasValidName(name) {\n  if (name === null) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'Form.Item', '`null` is passed as `name` property') : void 0;\n  }\n  return !(name === undefined || name === null);\n}\nfunction genEmptyMeta() {\n  return {\n    errors: [],\n    warnings: [],\n    touched: false,\n    validating: false,\n    name: []\n  };\n}\nfunction InternalFormItem(props) {\n  const {\n    name,\n    noStyle,\n    className,\n    dependencies,\n    prefixCls: customizePrefixCls,\n    shouldUpdate,\n    rules,\n    children,\n    required,\n    label,\n    messageVariables,\n    trigger = 'onChange',\n    validateTrigger,\n    hidden\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const {\n    name: formName\n  } = React.useContext(FormContext);\n  const isRenderProps = typeof children === 'function';\n  const notifyParentMetaChange = React.useContext(NoStyleItemContext);\n  const {\n    validateTrigger: contextValidateTrigger\n  } = React.useContext(FieldContext);\n  const mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : contextValidateTrigger;\n  const hasName = hasValidName(name);\n  const prefixCls = getPrefixCls('form', customizePrefixCls);\n  // Style\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  // ========================= MISC =========================\n  // Get `noStyle` required info\n  const listContext = React.useContext(ListContext);\n  const fieldKeyPathRef = React.useRef();\n  // ======================== Errors ========================\n  // >>>>> Collect sub field errors\n  const [subFieldErrors, setSubFieldErrors] = useFrameState({});\n  // >>>>> Current field errors\n  const [meta, setMeta] = useState(() => genEmptyMeta());\n  const onMetaChange = nextMeta => {\n    // This keyInfo is not correct when field is removed\n    // Since origin keyManager no longer keep the origin key anymore\n    // Which means we need cache origin one and reuse when removed\n    const keyInfo = listContext === null || listContext === void 0 ? void 0 : listContext.getKey(nextMeta.name);\n    // Destroy will reset all the meta\n    setMeta(nextMeta.destroy ? genEmptyMeta() : nextMeta, true);\n    // Bump to parent since noStyle\n    if (noStyle && notifyParentMetaChange) {\n      let namePath = nextMeta.name;\n      if (!nextMeta.destroy) {\n        if (keyInfo !== undefined) {\n          const [fieldKey, restPath] = keyInfo;\n          namePath = [fieldKey].concat(_toConsumableArray(restPath));\n          fieldKeyPathRef.current = namePath;\n        }\n      } else {\n        // Use origin cache data\n        namePath = fieldKeyPathRef.current || namePath;\n      }\n      notifyParentMetaChange(nextMeta, namePath);\n    }\n  };\n  // >>>>> Collect noStyle Field error to the top FormItem\n  const onSubItemMetaChange = (subMeta, uniqueKeys) => {\n    // Only `noStyle` sub item will trigger\n    setSubFieldErrors(prevSubFieldErrors => {\n      const clone = Object.assign({}, prevSubFieldErrors);\n      // name: ['user', 1] + key: [4] = ['user', 4]\n      const mergedNamePath = [].concat(_toConsumableArray(subMeta.name.slice(0, -1)), _toConsumableArray(uniqueKeys));\n      const mergedNameKey = mergedNamePath.join(NAME_SPLIT);\n      if (subMeta.destroy) {\n        // Remove\n        delete clone[mergedNameKey];\n      } else {\n        // Update\n        clone[mergedNameKey] = subMeta;\n      }\n      return clone;\n    });\n  };\n  // >>>>> Get merged errors\n  const [mergedErrors, mergedWarnings] = React.useMemo(() => {\n    const errorList = _toConsumableArray(meta.errors);\n    const warningList = _toConsumableArray(meta.warnings);\n    Object.values(subFieldErrors).forEach(subFieldError => {\n      errorList.push.apply(errorList, _toConsumableArray(subFieldError.errors || []));\n      warningList.push.apply(warningList, _toConsumableArray(subFieldError.warnings || []));\n    });\n    return [errorList, warningList];\n  }, [subFieldErrors, meta.errors, meta.warnings]);\n  // ===================== Children Ref =====================\n  const getItemRef = useItemRef();\n  // ======================== Render ========================\n  function renderLayout(baseChildren, fieldId, isRequired) {\n    if (noStyle && !hidden) {\n      return baseChildren;\n    }\n    return /*#__PURE__*/React.createElement(ItemHolder, Object.assign({\n      key: \"row\"\n    }, props, {\n      className: classNames(className, hashId),\n      prefixCls: prefixCls,\n      fieldId: fieldId,\n      isRequired: isRequired,\n      errors: mergedErrors,\n      warnings: mergedWarnings,\n      meta: meta,\n      onSubItemMetaChange: onSubItemMetaChange\n    }), baseChildren);\n  }\n  if (!hasName && !isRenderProps && !dependencies) {\n    return wrapSSR(renderLayout(children));\n  }\n  let variables = {};\n  if (typeof label === 'string') {\n    variables.label = label;\n  } else if (name) {\n    variables.label = String(name);\n  }\n  if (messageVariables) {\n    variables = Object.assign(Object.assign({}, variables), messageVariables);\n  }\n  // >>>>> With Field\n  return wrapSSR( /*#__PURE__*/React.createElement(Field, Object.assign({}, props, {\n    messageVariables: variables,\n    trigger: trigger,\n    validateTrigger: mergedValidateTrigger,\n    onMetaChange: onMetaChange\n  }), (control, renderMeta, context) => {\n    const mergedName = toArray(name).length && renderMeta ? renderMeta.name : [];\n    const fieldId = getFieldId(mergedName, formName);\n    const isRequired = required !== undefined ? required : !!(rules && rules.some(rule => {\n      if (rule && typeof rule === 'object' && rule.required && !rule.warningOnly) {\n        return true;\n      }\n      if (typeof rule === 'function') {\n        const ruleEntity = rule(context);\n        return ruleEntity && ruleEntity.required && !ruleEntity.warningOnly;\n      }\n      return false;\n    }));\n    // ======================= Children =======================\n    const mergedControl = Object.assign({}, control);\n    let childNode = null;\n    process.env.NODE_ENV !== \"production\" ? warning(!(shouldUpdate && dependencies), 'Form.Item', \"`shouldUpdate` and `dependencies` shouldn't be used together. See https://u.ant.design/form-deps.\") : void 0;\n    if (Array.isArray(children) && hasName) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Form.Item', 'A `Form.Item` with a `name` prop must have a single child element. For information on how to render more complex form items, see https://u.ant.design/complex-form-item.') : void 0;\n      childNode = children;\n    } else if (isRenderProps && (!(shouldUpdate || dependencies) || hasName)) {\n      process.env.NODE_ENV !== \"production\" ? warning(!!(shouldUpdate || dependencies), 'Form.Item', 'A `Form.Item` with a render function must have either `shouldUpdate` or `dependencies`.') : void 0;\n      process.env.NODE_ENV !== \"production\" ? warning(!hasName, 'Form.Item', 'A `Form.Item` with a render function cannot be a field, and thus cannot have a `name` prop.') : void 0;\n    } else if (dependencies && !isRenderProps && !hasName) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Form.Item', 'Must set `name` or use a render function when `dependencies` is set.') : void 0;\n    } else if (isValidElement(children)) {\n      process.env.NODE_ENV !== \"production\" ? warning(children.props.defaultValue === undefined, 'Form.Item', '`defaultValue` will not work on controlled Field. You should use `initialValues` of Form instead.') : void 0;\n      const childProps = Object.assign(Object.assign({}, children.props), mergedControl);\n      if (!childProps.id) {\n        childProps.id = fieldId;\n      }\n      if (props.help || mergedErrors.length > 0 || mergedWarnings.length > 0 || props.extra) {\n        const describedbyArr = [];\n        if (props.help || mergedErrors.length > 0) {\n          describedbyArr.push(`${fieldId}_help`);\n        }\n        if (props.extra) {\n          describedbyArr.push(`${fieldId}_extra`);\n        }\n        childProps['aria-describedby'] = describedbyArr.join(' ');\n      }\n      if (mergedErrors.length > 0) {\n        childProps['aria-invalid'] = 'true';\n      }\n      if (isRequired) {\n        childProps['aria-required'] = 'true';\n      }\n      if (supportRef(children)) {\n        childProps.ref = getItemRef(mergedName, children);\n      }\n      // We should keep user origin event handler\n      const triggers = new Set([].concat(_toConsumableArray(toArray(trigger)), _toConsumableArray(toArray(mergedValidateTrigger))));\n      triggers.forEach(eventName => {\n        childProps[eventName] = function () {\n          var _a2, _c2;\n          var _a, _b, _c;\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          (_a = mergedControl[eventName]) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [mergedControl].concat(args));\n          (_c = (_b = children.props)[eventName]) === null || _c === void 0 ? void 0 : (_c2 = _c).call.apply(_c2, [_b].concat(args));\n        };\n      });\n      // List of props that need to be watched for changes -> if changes are detected in MemoInput -> rerender\n      const watchingChildProps = [childProps['aria-required'], childProps['aria-invalid'], childProps['aria-describedby']];\n      childNode = /*#__PURE__*/React.createElement(MemoInput, {\n        value: mergedControl[props.valuePropName || 'value'],\n        update: children,\n        childProps: watchingChildProps\n      }, cloneElement(children, childProps));\n    } else if (isRenderProps && (shouldUpdate || dependencies) && !hasName) {\n      childNode = children(context);\n    } else {\n      process.env.NODE_ENV !== \"production\" ? warning(!mergedName.length, 'Form.Item', '`name` is only used for validate React element. If you are using Form.Item as layout display, please remove `name` instead.') : void 0;\n      childNode = children;\n    }\n    return renderLayout(childNode, fieldId, isRequired);\n  }));\n}\nconst FormItem = InternalFormItem;\nFormItem.useStatus = useFormItemStatus;\nexport default FormItem;"],"mappings":"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"},"metadata":{},"sourceType":"module"}