{"ast":null,"code":"import { useContext } from '@rc-component/context';\nimport TableContext from \"../context/TableContext\";\n/** Check if cell is in hover range */\n\nfunction inHoverRange(cellStartRow, cellRowSpan, startRow, endRow) {\n  var cellEndRow = cellStartRow + cellRowSpan - 1;\n  return cellStartRow <= endRow && cellEndRow >= startRow;\n}\n\nexport default function useHoverState(rowIndex, rowSpan) {\n  return useContext(TableContext, function (ctx) {\n    var hovering = inHoverRange(rowIndex, rowSpan || 1, ctx.hoverStartRow, ctx.hoverEndRow);\n    return [hovering, ctx.onHover];\n  });\n}","map":{"version":3,"names":["useContext","TableContext","inHoverRange","cellStartRow","cellRowSpan","startRow","endRow","cellEndRow","useHoverState","rowIndex","rowSpan","ctx","hovering","hoverStartRow","hoverEndRow","onHover"],"sources":["D:/year4sem2/evmos/campaign/node_modules/rc-table/es/Cell/useHoverState.js"],"sourcesContent":["import { useContext } from '@rc-component/context';\nimport TableContext from \"../context/TableContext\";\n\n/** Check if cell is in hover range */\nfunction inHoverRange(cellStartRow, cellRowSpan, startRow, endRow) {\n  var cellEndRow = cellStartRow + cellRowSpan - 1;\n  return cellStartRow <= endRow && cellEndRow >= startRow;\n}\n\nexport default function useHoverState(rowIndex, rowSpan) {\n  return useContext(TableContext, function (ctx) {\n    var hovering = inHoverRange(rowIndex, rowSpan || 1, ctx.hoverStartRow, ctx.hoverEndRow);\n    return [hovering, ctx.onHover];\n  });\n}"],"mappings":"AAAA,SAASA,UAAT,QAA2B,uBAA3B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AAEA;;AACA,SAASC,YAAT,CAAsBC,YAAtB,EAAoCC,WAApC,EAAiDC,QAAjD,EAA2DC,MAA3D,EAAmE;EACjE,IAAIC,UAAU,GAAGJ,YAAY,GAAGC,WAAf,GAA6B,CAA9C;EACA,OAAOD,YAAY,IAAIG,MAAhB,IAA0BC,UAAU,IAAIF,QAA/C;AACD;;AAED,eAAe,SAASG,aAAT,CAAuBC,QAAvB,EAAiCC,OAAjC,EAA0C;EACvD,OAAOV,UAAU,CAACC,YAAD,EAAe,UAAUU,GAAV,EAAe;IAC7C,IAAIC,QAAQ,GAAGV,YAAY,CAACO,QAAD,EAAWC,OAAO,IAAI,CAAtB,EAAyBC,GAAG,CAACE,aAA7B,EAA4CF,GAAG,CAACG,WAAhD,CAA3B;IACA,OAAO,CAACF,QAAD,EAAWD,GAAG,CAACI,OAAf,CAAP;EACD,CAHgB,CAAjB;AAID"},"metadata":{},"sourceType":"module"}