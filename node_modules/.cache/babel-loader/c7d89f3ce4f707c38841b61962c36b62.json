{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"data\", \"renderItem\", \"renderRawItem\", \"itemKey\", \"itemWidth\", \"ssr\", \"style\", \"className\", \"maxCount\", \"renderRest\", \"renderRawRest\", \"suffix\", \"component\", \"itemComponent\", \"onVisibleChange\"];\nimport * as React from 'react';\nimport { useState, useMemo, useCallback } from 'react';\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport Item from './Item';\nimport useEffectState, { useBatcher } from './hooks/useEffectState';\nimport RawItem from './RawItem';\nexport var OverflowContext = /*#__PURE__*/React.createContext(null);\nvar RESPONSIVE = 'responsive';\nvar INVALIDATE = 'invalidate';\n\nfunction defaultRenderRest(omittedItems) {\n  return \"+ \".concat(omittedItems.length, \" ...\");\n}\n\nfunction Overflow(props, ref) {\n  var _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-overflow' : _props$prefixCls,\n      _props$data = props.data,\n      data = _props$data === void 0 ? [] : _props$data,\n      renderItem = props.renderItem,\n      renderRawItem = props.renderRawItem,\n      itemKey = props.itemKey,\n      _props$itemWidth = props.itemWidth,\n      itemWidth = _props$itemWidth === void 0 ? 10 : _props$itemWidth,\n      ssr = props.ssr,\n      style = props.style,\n      className = props.className,\n      maxCount = props.maxCount,\n      renderRest = props.renderRest,\n      renderRawRest = props.renderRawRest,\n      suffix = props.suffix,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      itemComponent = props.itemComponent,\n      onVisibleChange = props.onVisibleChange,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var fullySSR = ssr === 'full';\n  var notifyEffectUpdate = useBatcher();\n\n  var _useEffectState = useEffectState(notifyEffectUpdate, null),\n      _useEffectState2 = _slicedToArray(_useEffectState, 2),\n      containerWidth = _useEffectState2[0],\n      setContainerWidth = _useEffectState2[1];\n\n  var mergedContainerWidth = containerWidth || 0;\n\n  var _useEffectState3 = useEffectState(notifyEffectUpdate, new Map()),\n      _useEffectState4 = _slicedToArray(_useEffectState3, 2),\n      itemWidths = _useEffectState4[0],\n      setItemWidths = _useEffectState4[1];\n\n  var _useEffectState5 = useEffectState(notifyEffectUpdate, 0),\n      _useEffectState6 = _slicedToArray(_useEffectState5, 2),\n      prevRestWidth = _useEffectState6[0],\n      setPrevRestWidth = _useEffectState6[1];\n\n  var _useEffectState7 = useEffectState(notifyEffectUpdate, 0),\n      _useEffectState8 = _slicedToArray(_useEffectState7, 2),\n      restWidth = _useEffectState8[0],\n      setRestWidth = _useEffectState8[1];\n\n  var _useEffectState9 = useEffectState(notifyEffectUpdate, 0),\n      _useEffectState10 = _slicedToArray(_useEffectState9, 2),\n      suffixWidth = _useEffectState10[0],\n      setSuffixWidth = _useEffectState10[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      suffixFixedStart = _useState2[0],\n      setSuffixFixedStart = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayCount = _useState4[0],\n      setDisplayCount = _useState4[1];\n\n  var mergedDisplayCount = React.useMemo(function () {\n    if (displayCount === null && fullySSR) {\n      return Number.MAX_SAFE_INTEGER;\n    }\n\n    return displayCount || 0;\n  }, [displayCount, containerWidth]);\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      restReady = _useState6[0],\n      setRestReady = _useState6[1];\n\n  var itemPrefixCls = \"\".concat(prefixCls, \"-item\"); // Always use the max width to avoid blink\n\n  var mergedRestWidth = Math.max(prevRestWidth, restWidth); // ================================= Data =================================\n\n  var isResponsive = maxCount === RESPONSIVE;\n  var shouldResponsive = data.length && isResponsive;\n  var invalidate = maxCount === INVALIDATE;\n  /**\n   * When is `responsive`, we will always render rest node to get the real width of it for calculation\n   */\n\n  var showRest = shouldResponsive || typeof maxCount === 'number' && data.length > maxCount;\n  var mergedData = useMemo(function () {\n    var items = data;\n\n    if (shouldResponsive) {\n      if (containerWidth === null && fullySSR) {\n        items = data;\n      } else {\n        items = data.slice(0, Math.min(data.length, mergedContainerWidth / itemWidth));\n      }\n    } else if (typeof maxCount === 'number') {\n      items = data.slice(0, maxCount);\n    }\n\n    return items;\n  }, [data, itemWidth, containerWidth, maxCount, shouldResponsive]);\n  var omittedItems = useMemo(function () {\n    if (shouldResponsive) {\n      return data.slice(mergedDisplayCount + 1);\n    }\n\n    return data.slice(mergedData.length);\n  }, [data, mergedData, shouldResponsive, mergedDisplayCount]); // ================================= Item =================================\n\n  var getKey = useCallback(function (item, index) {\n    var _ref;\n\n    if (typeof itemKey === 'function') {\n      return itemKey(item);\n    }\n\n    return (_ref = itemKey && (item === null || item === void 0 ? void 0 : item[itemKey])) !== null && _ref !== void 0 ? _ref : index;\n  }, [itemKey]);\n  var mergedRenderItem = useCallback(renderItem || function (item) {\n    return item;\n  }, [renderItem]);\n\n  function updateDisplayCount(count, suffixFixedStartVal, notReady) {\n    // React 18 will sync render even when the value is same in some case.\n    // We take `mergedData` as deps which may cause dead loop if it's dynamic generate.\n    // ref: https://github.com/ant-design/ant-design/issues/36559\n    if (displayCount === count && (suffixFixedStartVal === undefined || suffixFixedStartVal === suffixFixedStart)) {\n      return;\n    }\n\n    setDisplayCount(count);\n\n    if (!notReady) {\n      setRestReady(count < data.length - 1);\n      onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(count);\n    }\n\n    if (suffixFixedStartVal !== undefined) {\n      setSuffixFixedStart(suffixFixedStartVal);\n    }\n  } // ================================= Size =================================\n\n\n  function onOverflowResize(_, element) {\n    setContainerWidth(element.clientWidth);\n  }\n\n  function registerSize(key, width) {\n    setItemWidths(function (origin) {\n      var clone = new Map(origin);\n\n      if (width === null) {\n        clone.delete(key);\n      } else {\n        clone.set(key, width);\n      }\n\n      return clone;\n    });\n  }\n\n  function registerOverflowSize(_, width) {\n    setRestWidth(width);\n    setPrevRestWidth(restWidth);\n  }\n\n  function registerSuffixSize(_, width) {\n    setSuffixWidth(width);\n  } // ================================ Effect ================================\n\n\n  function getItemWidth(index) {\n    return itemWidths.get(getKey(mergedData[index], index));\n  }\n\n  useLayoutEffect(function () {\n    if (mergedContainerWidth && typeof mergedRestWidth === 'number' && mergedData) {\n      var totalWidth = suffixWidth;\n      var len = mergedData.length;\n      var lastIndex = len - 1; // When data count change to 0, reset this since not loop will reach\n\n      if (!len) {\n        updateDisplayCount(0, null);\n        return;\n      }\n\n      for (var i = 0; i < len; i += 1) {\n        var currentItemWidth = getItemWidth(i); // Fully will always render\n\n        if (fullySSR) {\n          currentItemWidth = currentItemWidth || 0;\n        } // Break since data not ready\n\n\n        if (currentItemWidth === undefined) {\n          updateDisplayCount(i - 1, undefined, true);\n          break;\n        } // Find best match\n\n\n        totalWidth += currentItemWidth;\n\n        if ( // Only one means `totalWidth` is the final width\n        lastIndex === 0 && totalWidth <= mergedContainerWidth || // Last two width will be the final width\n        i === lastIndex - 1 && totalWidth + getItemWidth(lastIndex) <= mergedContainerWidth) {\n          // Additional check if match the end\n          updateDisplayCount(lastIndex, null);\n          break;\n        } else if (totalWidth + mergedRestWidth > mergedContainerWidth) {\n          // Can not hold all the content to show rest\n          updateDisplayCount(i - 1, totalWidth - currentItemWidth - suffixWidth + restWidth);\n          break;\n        }\n      }\n\n      if (suffix && getItemWidth(0) + suffixWidth > mergedContainerWidth) {\n        setSuffixFixedStart(null);\n      }\n    }\n  }, [mergedContainerWidth, itemWidths, restWidth, suffixWidth, getKey, mergedData]); // ================================ Render ================================\n\n  var displayRest = restReady && !!omittedItems.length;\n  var suffixStyle = {};\n\n  if (suffixFixedStart !== null && shouldResponsive) {\n    suffixStyle = {\n      position: 'absolute',\n      left: suffixFixedStart,\n      top: 0\n    };\n  }\n\n  var itemSharedProps = {\n    prefixCls: itemPrefixCls,\n    responsive: shouldResponsive,\n    component: itemComponent,\n    invalidate: invalidate\n  }; // >>>>> Choice render fun by `renderRawItem`\n\n  var internalRenderItemNode = renderRawItem ? function (item, index) {\n    var key = getKey(item, index);\n    return /*#__PURE__*/React.createElement(OverflowContext.Provider, {\n      key: key,\n      value: _objectSpread(_objectSpread({}, itemSharedProps), {}, {\n        order: index,\n        item: item,\n        itemKey: key,\n        registerSize: registerSize,\n        display: index <= mergedDisplayCount\n      })\n    }, renderRawItem(item, index));\n  } : function (item, index) {\n    var key = getKey(item, index);\n    return /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, {\n      order: index,\n      key: key,\n      item: item,\n      renderItem: mergedRenderItem,\n      itemKey: key,\n      registerSize: registerSize,\n      display: index <= mergedDisplayCount\n    }));\n  }; // >>>>> Rest node\n\n  var restNode;\n  var restContextProps = {\n    order: displayRest ? mergedDisplayCount : Number.MAX_SAFE_INTEGER,\n    className: \"\".concat(itemPrefixCls, \"-rest\"),\n    registerSize: registerOverflowSize,\n    display: displayRest\n  };\n\n  if (!renderRawRest) {\n    var mergedRenderRest = renderRest || defaultRenderRest;\n    restNode = /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, restContextProps), typeof mergedRenderRest === 'function' ? mergedRenderRest(omittedItems) : mergedRenderRest);\n  } else if (renderRawRest) {\n    restNode = /*#__PURE__*/React.createElement(OverflowContext.Provider, {\n      value: _objectSpread(_objectSpread({}, itemSharedProps), restContextProps)\n    }, renderRawRest(omittedItems));\n  }\n\n  var overflowNode = /*#__PURE__*/React.createElement(Component, _extends({\n    className: classNames(!invalidate && prefixCls, className),\n    style: style,\n    ref: ref\n  }, restProps), mergedData.map(internalRenderItemNode), showRest ? restNode : null, suffix && /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, {\n    responsive: isResponsive,\n    responsiveDisabled: !shouldResponsive,\n    order: mergedDisplayCount,\n    className: \"\".concat(itemPrefixCls, \"-suffix\"),\n    registerSize: registerSuffixSize,\n    display: true,\n    style: suffixStyle\n  }), suffix));\n\n  if (isResponsive) {\n    overflowNode = /*#__PURE__*/React.createElement(ResizeObserver, {\n      onResize: onOverflowResize,\n      disabled: !shouldResponsive\n    }, overflowNode);\n  }\n\n  return overflowNode;\n}\n\nvar ForwardOverflow = /*#__PURE__*/React.forwardRef(Overflow);\nForwardOverflow.displayName = 'Overflow';\nForwardOverflow.Item = RawItem;\nForwardOverflow.RESPONSIVE = RESPONSIVE;\nForwardOverflow.INVALIDATE = INVALIDATE; // Convert to generic type\n\nexport default ForwardOverflow;","map":{"version":3,"names":["_extends","_objectSpread","_slicedToArray","_objectWithoutProperties","_excluded","React","useState","useMemo","useCallback","classNames","ResizeObserver","useLayoutEffect","Item","useEffectState","useBatcher","RawItem","OverflowContext","createContext","RESPONSIVE","INVALIDATE","defaultRenderRest","omittedItems","concat","length","Overflow","props","ref","_props$prefixCls","prefixCls","_props$data","data","renderItem","renderRawItem","itemKey","_props$itemWidth","itemWidth","ssr","style","className","maxCount","renderRest","renderRawRest","suffix","_props$component","component","Component","itemComponent","onVisibleChange","restProps","fullySSR","notifyEffectUpdate","_useEffectState","_useEffectState2","containerWidth","setContainerWidth","mergedContainerWidth","_useEffectState3","Map","_useEffectState4","itemWidths","setItemWidths","_useEffectState5","_useEffectState6","prevRestWidth","setPrevRestWidth","_useEffectState7","_useEffectState8","restWidth","setRestWidth","_useEffectState9","_useEffectState10","suffixWidth","setSuffixWidth","_useState","_useState2","suffixFixedStart","setSuffixFixedStart","_useState3","_useState4","displayCount","setDisplayCount","mergedDisplayCount","Number","MAX_SAFE_INTEGER","_useState5","_useState6","restReady","setRestReady","itemPrefixCls","mergedRestWidth","Math","max","isResponsive","shouldResponsive","invalidate","showRest","mergedData","items","slice","min","getKey","item","index","_ref","mergedRenderItem","updateDisplayCount","count","suffixFixedStartVal","notReady","undefined","onOverflowResize","_","element","clientWidth","registerSize","key","width","origin","clone","delete","set","registerOverflowSize","registerSuffixSize","getItemWidth","get","totalWidth","len","lastIndex","i","currentItemWidth","displayRest","suffixStyle","position","left","top","itemSharedProps","responsive","internalRenderItemNode","createElement","Provider","value","order","display","restNode","restContextProps","mergedRenderRest","overflowNode","map","responsiveDisabled","onResize","disabled","ForwardOverflow","forwardRef","displayName"],"sources":["D:/year4sem2/evmos/campaign/node_modules/rc-menu/node_modules/rc-overflow/es/Overflow.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"data\", \"renderItem\", \"renderRawItem\", \"itemKey\", \"itemWidth\", \"ssr\", \"style\", \"className\", \"maxCount\", \"renderRest\", \"renderRawRest\", \"suffix\", \"component\", \"itemComponent\", \"onVisibleChange\"];\nimport * as React from 'react';\nimport { useState, useMemo, useCallback } from 'react';\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport Item from './Item';\nimport useEffectState, { useBatcher } from './hooks/useEffectState';\nimport RawItem from './RawItem';\nexport var OverflowContext = /*#__PURE__*/React.createContext(null);\nvar RESPONSIVE = 'responsive';\nvar INVALIDATE = 'invalidate';\nfunction defaultRenderRest(omittedItems) {\n  return \"+ \".concat(omittedItems.length, \" ...\");\n}\nfunction Overflow(props, ref) {\n  var _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? 'rc-overflow' : _props$prefixCls,\n    _props$data = props.data,\n    data = _props$data === void 0 ? [] : _props$data,\n    renderItem = props.renderItem,\n    renderRawItem = props.renderRawItem,\n    itemKey = props.itemKey,\n    _props$itemWidth = props.itemWidth,\n    itemWidth = _props$itemWidth === void 0 ? 10 : _props$itemWidth,\n    ssr = props.ssr,\n    style = props.style,\n    className = props.className,\n    maxCount = props.maxCount,\n    renderRest = props.renderRest,\n    renderRawRest = props.renderRawRest,\n    suffix = props.suffix,\n    _props$component = props.component,\n    Component = _props$component === void 0 ? 'div' : _props$component,\n    itemComponent = props.itemComponent,\n    onVisibleChange = props.onVisibleChange,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var fullySSR = ssr === 'full';\n  var notifyEffectUpdate = useBatcher();\n  var _useEffectState = useEffectState(notifyEffectUpdate, null),\n    _useEffectState2 = _slicedToArray(_useEffectState, 2),\n    containerWidth = _useEffectState2[0],\n    setContainerWidth = _useEffectState2[1];\n  var mergedContainerWidth = containerWidth || 0;\n  var _useEffectState3 = useEffectState(notifyEffectUpdate, new Map()),\n    _useEffectState4 = _slicedToArray(_useEffectState3, 2),\n    itemWidths = _useEffectState4[0],\n    setItemWidths = _useEffectState4[1];\n  var _useEffectState5 = useEffectState(notifyEffectUpdate, 0),\n    _useEffectState6 = _slicedToArray(_useEffectState5, 2),\n    prevRestWidth = _useEffectState6[0],\n    setPrevRestWidth = _useEffectState6[1];\n  var _useEffectState7 = useEffectState(notifyEffectUpdate, 0),\n    _useEffectState8 = _slicedToArray(_useEffectState7, 2),\n    restWidth = _useEffectState8[0],\n    setRestWidth = _useEffectState8[1];\n  var _useEffectState9 = useEffectState(notifyEffectUpdate, 0),\n    _useEffectState10 = _slicedToArray(_useEffectState9, 2),\n    suffixWidth = _useEffectState10[0],\n    setSuffixWidth = _useEffectState10[1];\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    suffixFixedStart = _useState2[0],\n    setSuffixFixedStart = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    displayCount = _useState4[0],\n    setDisplayCount = _useState4[1];\n  var mergedDisplayCount = React.useMemo(function () {\n    if (displayCount === null && fullySSR) {\n      return Number.MAX_SAFE_INTEGER;\n    }\n    return displayCount || 0;\n  }, [displayCount, containerWidth]);\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    restReady = _useState6[0],\n    setRestReady = _useState6[1];\n  var itemPrefixCls = \"\".concat(prefixCls, \"-item\");\n  // Always use the max width to avoid blink\n  var mergedRestWidth = Math.max(prevRestWidth, restWidth);\n  // ================================= Data =================================\n  var isResponsive = maxCount === RESPONSIVE;\n  var shouldResponsive = data.length && isResponsive;\n  var invalidate = maxCount === INVALIDATE;\n  /**\n   * When is `responsive`, we will always render rest node to get the real width of it for calculation\n   */\n  var showRest = shouldResponsive || typeof maxCount === 'number' && data.length > maxCount;\n  var mergedData = useMemo(function () {\n    var items = data;\n    if (shouldResponsive) {\n      if (containerWidth === null && fullySSR) {\n        items = data;\n      } else {\n        items = data.slice(0, Math.min(data.length, mergedContainerWidth / itemWidth));\n      }\n    } else if (typeof maxCount === 'number') {\n      items = data.slice(0, maxCount);\n    }\n    return items;\n  }, [data, itemWidth, containerWidth, maxCount, shouldResponsive]);\n  var omittedItems = useMemo(function () {\n    if (shouldResponsive) {\n      return data.slice(mergedDisplayCount + 1);\n    }\n    return data.slice(mergedData.length);\n  }, [data, mergedData, shouldResponsive, mergedDisplayCount]);\n  // ================================= Item =================================\n  var getKey = useCallback(function (item, index) {\n    var _ref;\n    if (typeof itemKey === 'function') {\n      return itemKey(item);\n    }\n    return (_ref = itemKey && (item === null || item === void 0 ? void 0 : item[itemKey])) !== null && _ref !== void 0 ? _ref : index;\n  }, [itemKey]);\n  var mergedRenderItem = useCallback(renderItem || function (item) {\n    return item;\n  }, [renderItem]);\n  function updateDisplayCount(count, suffixFixedStartVal, notReady) {\n    // React 18 will sync render even when the value is same in some case.\n    // We take `mergedData` as deps which may cause dead loop if it's dynamic generate.\n    // ref: https://github.com/ant-design/ant-design/issues/36559\n    if (displayCount === count && (suffixFixedStartVal === undefined || suffixFixedStartVal === suffixFixedStart)) {\n      return;\n    }\n    setDisplayCount(count);\n    if (!notReady) {\n      setRestReady(count < data.length - 1);\n      onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(count);\n    }\n    if (suffixFixedStartVal !== undefined) {\n      setSuffixFixedStart(suffixFixedStartVal);\n    }\n  }\n  // ================================= Size =================================\n  function onOverflowResize(_, element) {\n    setContainerWidth(element.clientWidth);\n  }\n  function registerSize(key, width) {\n    setItemWidths(function (origin) {\n      var clone = new Map(origin);\n      if (width === null) {\n        clone.delete(key);\n      } else {\n        clone.set(key, width);\n      }\n      return clone;\n    });\n  }\n  function registerOverflowSize(_, width) {\n    setRestWidth(width);\n    setPrevRestWidth(restWidth);\n  }\n  function registerSuffixSize(_, width) {\n    setSuffixWidth(width);\n  }\n  // ================================ Effect ================================\n  function getItemWidth(index) {\n    return itemWidths.get(getKey(mergedData[index], index));\n  }\n  useLayoutEffect(function () {\n    if (mergedContainerWidth && typeof mergedRestWidth === 'number' && mergedData) {\n      var totalWidth = suffixWidth;\n      var len = mergedData.length;\n      var lastIndex = len - 1;\n      // When data count change to 0, reset this since not loop will reach\n      if (!len) {\n        updateDisplayCount(0, null);\n        return;\n      }\n      for (var i = 0; i < len; i += 1) {\n        var currentItemWidth = getItemWidth(i);\n        // Fully will always render\n        if (fullySSR) {\n          currentItemWidth = currentItemWidth || 0;\n        }\n        // Break since data not ready\n        if (currentItemWidth === undefined) {\n          updateDisplayCount(i - 1, undefined, true);\n          break;\n        }\n        // Find best match\n        totalWidth += currentItemWidth;\n        if (\n        // Only one means `totalWidth` is the final width\n        lastIndex === 0 && totalWidth <= mergedContainerWidth ||\n        // Last two width will be the final width\n        i === lastIndex - 1 && totalWidth + getItemWidth(lastIndex) <= mergedContainerWidth) {\n          // Additional check if match the end\n          updateDisplayCount(lastIndex, null);\n          break;\n        } else if (totalWidth + mergedRestWidth > mergedContainerWidth) {\n          // Can not hold all the content to show rest\n          updateDisplayCount(i - 1, totalWidth - currentItemWidth - suffixWidth + restWidth);\n          break;\n        }\n      }\n      if (suffix && getItemWidth(0) + suffixWidth > mergedContainerWidth) {\n        setSuffixFixedStart(null);\n      }\n    }\n  }, [mergedContainerWidth, itemWidths, restWidth, suffixWidth, getKey, mergedData]);\n  // ================================ Render ================================\n  var displayRest = restReady && !!omittedItems.length;\n  var suffixStyle = {};\n  if (suffixFixedStart !== null && shouldResponsive) {\n    suffixStyle = {\n      position: 'absolute',\n      left: suffixFixedStart,\n      top: 0\n    };\n  }\n  var itemSharedProps = {\n    prefixCls: itemPrefixCls,\n    responsive: shouldResponsive,\n    component: itemComponent,\n    invalidate: invalidate\n  };\n  // >>>>> Choice render fun by `renderRawItem`\n  var internalRenderItemNode = renderRawItem ? function (item, index) {\n    var key = getKey(item, index);\n    return /*#__PURE__*/React.createElement(OverflowContext.Provider, {\n      key: key,\n      value: _objectSpread(_objectSpread({}, itemSharedProps), {}, {\n        order: index,\n        item: item,\n        itemKey: key,\n        registerSize: registerSize,\n        display: index <= mergedDisplayCount\n      })\n    }, renderRawItem(item, index));\n  } : function (item, index) {\n    var key = getKey(item, index);\n    return /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, {\n      order: index,\n      key: key,\n      item: item,\n      renderItem: mergedRenderItem,\n      itemKey: key,\n      registerSize: registerSize,\n      display: index <= mergedDisplayCount\n    }));\n  };\n  // >>>>> Rest node\n  var restNode;\n  var restContextProps = {\n    order: displayRest ? mergedDisplayCount : Number.MAX_SAFE_INTEGER,\n    className: \"\".concat(itemPrefixCls, \"-rest\"),\n    registerSize: registerOverflowSize,\n    display: displayRest\n  };\n  if (!renderRawRest) {\n    var mergedRenderRest = renderRest || defaultRenderRest;\n    restNode = /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, restContextProps), typeof mergedRenderRest === 'function' ? mergedRenderRest(omittedItems) : mergedRenderRest);\n  } else if (renderRawRest) {\n    restNode = /*#__PURE__*/React.createElement(OverflowContext.Provider, {\n      value: _objectSpread(_objectSpread({}, itemSharedProps), restContextProps)\n    }, renderRawRest(omittedItems));\n  }\n  var overflowNode = /*#__PURE__*/React.createElement(Component, _extends({\n    className: classNames(!invalidate && prefixCls, className),\n    style: style,\n    ref: ref\n  }, restProps), mergedData.map(internalRenderItemNode), showRest ? restNode : null, suffix && /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, {\n    responsive: isResponsive,\n    responsiveDisabled: !shouldResponsive,\n    order: mergedDisplayCount,\n    className: \"\".concat(itemPrefixCls, \"-suffix\"),\n    registerSize: registerSuffixSize,\n    display: true,\n    style: suffixStyle\n  }), suffix));\n  if (isResponsive) {\n    overflowNode = /*#__PURE__*/React.createElement(ResizeObserver, {\n      onResize: onOverflowResize,\n      disabled: !shouldResponsive\n    }, overflowNode);\n  }\n  return overflowNode;\n}\nvar ForwardOverflow = /*#__PURE__*/React.forwardRef(Overflow);\nForwardOverflow.displayName = 'Overflow';\nForwardOverflow.Item = RawItem;\nForwardOverflow.RESPONSIVE = RESPONSIVE;\nForwardOverflow.INVALIDATE = INVALIDATE;\n// Convert to generic type\nexport default ForwardOverflow;"],"mappings":"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"},"metadata":{},"sourceType":"module"}