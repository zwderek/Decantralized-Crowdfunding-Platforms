{"ast":null,"code":"import { placements } from \"rc-tooltip/es/placements\";\nconst autoAdjustOverflowEnabled = {\n  adjustX: 1,\n  adjustY: 1\n};\nconst autoAdjustOverflowDisabled = {\n  adjustX: 0,\n  adjustY: 0\n};\nconst targetOffset = [0, 0];\nexport function getOverflowOptions(autoAdjustOverflow) {\n  if (typeof autoAdjustOverflow === 'boolean') {\n    return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\n  }\n\n  return Object.assign(Object.assign({}, autoAdjustOverflowDisabled), autoAdjustOverflow);\n}\n\nfunction getArrowOffset(type, arrowWidth, offset) {\n  switch (type) {\n    case 'top':\n    case 'topLeft':\n    case 'topRight':\n      return [0, -(arrowWidth / 2 + offset)];\n\n    case 'bottom':\n    case 'bottomLeft':\n    case 'bottomRight':\n      return [0, arrowWidth / 2 + offset];\n\n    case 'left':\n    case 'leftTop':\n    case 'leftBottom':\n      return [-(arrowWidth / 2 + offset), 0];\n\n    case 'right':\n    case 'rightTop':\n    case 'rightBottom':\n      return [arrowWidth / 2 + offset, 0];\n\n    /* istanbul ignore next */\n\n    default:\n      return [0, 0];\n  }\n}\n\nfunction vertexCalc(point1, point2) {\n  return [point1[0] + point2[0], point1[1] + point2[1]];\n}\n\nexport default function getPlacements(config) {\n  const {\n    arrowWidth,\n    horizontalArrowShift = 16,\n    verticalArrowShift = 8,\n    autoAdjustOverflow,\n    arrowPointAtCenter,\n    offset\n  } = config;\n  const halfArrowWidth = arrowWidth / 2;\n  const placementMap = {\n    left: {\n      points: ['cr', 'cl'],\n      offset: [-offset, 0]\n    },\n    right: {\n      points: ['cl', 'cr'],\n      offset: [offset, 0]\n    },\n    top: {\n      points: ['bc', 'tc'],\n      offset: [0, -offset]\n    },\n    bottom: {\n      points: ['tc', 'bc'],\n      offset: [0, offset]\n    },\n    topLeft: {\n      points: ['bl', 'tc'],\n      offset: [-(horizontalArrowShift + halfArrowWidth), -offset]\n    },\n    leftTop: {\n      points: ['tr', 'cl'],\n      offset: [-offset, -(verticalArrowShift + halfArrowWidth)]\n    },\n    topRight: {\n      points: ['br', 'tc'],\n      offset: [horizontalArrowShift + halfArrowWidth, -offset]\n    },\n    rightTop: {\n      points: ['tl', 'cr'],\n      offset: [offset, -(verticalArrowShift + halfArrowWidth)]\n    },\n    bottomRight: {\n      points: ['tr', 'bc'],\n      offset: [horizontalArrowShift + halfArrowWidth, offset]\n    },\n    rightBottom: {\n      points: ['bl', 'cr'],\n      offset: [offset, verticalArrowShift + halfArrowWidth]\n    },\n    bottomLeft: {\n      points: ['tl', 'bc'],\n      offset: [-(horizontalArrowShift + halfArrowWidth), offset]\n    },\n    leftBottom: {\n      points: ['br', 'cl'],\n      offset: [-offset, verticalArrowShift + halfArrowWidth]\n    }\n  };\n  Object.keys(placementMap).forEach(key => {\n    placementMap[key] = arrowPointAtCenter ? Object.assign(Object.assign({}, placementMap[key]), {\n      offset: vertexCalc(placementMap[key].offset, getArrowOffset(key, arrowWidth, offset)),\n      overflow: getOverflowOptions(autoAdjustOverflow),\n      targetOffset\n    }) : Object.assign(Object.assign({}, placements[key]), {\n      offset: vertexCalc(placements[key].offset, getArrowOffset(key, arrowWidth, offset)),\n      overflow: getOverflowOptions(autoAdjustOverflow)\n    });\n    placementMap[key].ignoreShake = true;\n  });\n  return placementMap;\n}","map":{"version":3,"names":["placements","autoAdjustOverflowEnabled","adjustX","adjustY","autoAdjustOverflowDisabled","targetOffset","getOverflowOptions","autoAdjustOverflow","Object","assign","getArrowOffset","type","arrowWidth","offset","vertexCalc","point1","point2","getPlacements","config","horizontalArrowShift","verticalArrowShift","arrowPointAtCenter","halfArrowWidth","placementMap","left","points","right","top","bottom","topLeft","leftTop","topRight","rightTop","bottomRight","rightBottom","bottomLeft","leftBottom","keys","forEach","key","overflow","ignoreShake"],"sources":["D:/year4sem2/evmos/campaign/node_modules/antd/es/_util/placements.js"],"sourcesContent":["import { placements } from \"rc-tooltip/es/placements\";\nconst autoAdjustOverflowEnabled = {\n  adjustX: 1,\n  adjustY: 1\n};\nconst autoAdjustOverflowDisabled = {\n  adjustX: 0,\n  adjustY: 0\n};\nconst targetOffset = [0, 0];\nexport function getOverflowOptions(autoAdjustOverflow) {\n  if (typeof autoAdjustOverflow === 'boolean') {\n    return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\n  }\n  return Object.assign(Object.assign({}, autoAdjustOverflowDisabled), autoAdjustOverflow);\n}\nfunction getArrowOffset(type, arrowWidth, offset) {\n  switch (type) {\n    case 'top':\n    case 'topLeft':\n    case 'topRight':\n      return [0, -(arrowWidth / 2 + offset)];\n    case 'bottom':\n    case 'bottomLeft':\n    case 'bottomRight':\n      return [0, arrowWidth / 2 + offset];\n    case 'left':\n    case 'leftTop':\n    case 'leftBottom':\n      return [-(arrowWidth / 2 + offset), 0];\n    case 'right':\n    case 'rightTop':\n    case 'rightBottom':\n      return [arrowWidth / 2 + offset, 0];\n    /* istanbul ignore next */\n    default:\n      return [0, 0];\n  }\n}\nfunction vertexCalc(point1, point2) {\n  return [point1[0] + point2[0], point1[1] + point2[1]];\n}\nexport default function getPlacements(config) {\n  const {\n    arrowWidth,\n    horizontalArrowShift = 16,\n    verticalArrowShift = 8,\n    autoAdjustOverflow,\n    arrowPointAtCenter,\n    offset\n  } = config;\n  const halfArrowWidth = arrowWidth / 2;\n  const placementMap = {\n    left: {\n      points: ['cr', 'cl'],\n      offset: [-offset, 0]\n    },\n    right: {\n      points: ['cl', 'cr'],\n      offset: [offset, 0]\n    },\n    top: {\n      points: ['bc', 'tc'],\n      offset: [0, -offset]\n    },\n    bottom: {\n      points: ['tc', 'bc'],\n      offset: [0, offset]\n    },\n    topLeft: {\n      points: ['bl', 'tc'],\n      offset: [-(horizontalArrowShift + halfArrowWidth), -offset]\n    },\n    leftTop: {\n      points: ['tr', 'cl'],\n      offset: [-offset, -(verticalArrowShift + halfArrowWidth)]\n    },\n    topRight: {\n      points: ['br', 'tc'],\n      offset: [horizontalArrowShift + halfArrowWidth, -offset]\n    },\n    rightTop: {\n      points: ['tl', 'cr'],\n      offset: [offset, -(verticalArrowShift + halfArrowWidth)]\n    },\n    bottomRight: {\n      points: ['tr', 'bc'],\n      offset: [horizontalArrowShift + halfArrowWidth, offset]\n    },\n    rightBottom: {\n      points: ['bl', 'cr'],\n      offset: [offset, verticalArrowShift + halfArrowWidth]\n    },\n    bottomLeft: {\n      points: ['tl', 'bc'],\n      offset: [-(horizontalArrowShift + halfArrowWidth), offset]\n    },\n    leftBottom: {\n      points: ['br', 'cl'],\n      offset: [-offset, verticalArrowShift + halfArrowWidth]\n    }\n  };\n  Object.keys(placementMap).forEach(key => {\n    placementMap[key] = arrowPointAtCenter ? Object.assign(Object.assign({}, placementMap[key]), {\n      offset: vertexCalc(placementMap[key].offset, getArrowOffset(key, arrowWidth, offset)),\n      overflow: getOverflowOptions(autoAdjustOverflow),\n      targetOffset\n    }) : Object.assign(Object.assign({}, placements[key]), {\n      offset: vertexCalc(placements[key].offset, getArrowOffset(key, arrowWidth, offset)),\n      overflow: getOverflowOptions(autoAdjustOverflow)\n    });\n    placementMap[key].ignoreShake = true;\n  });\n  return placementMap;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}