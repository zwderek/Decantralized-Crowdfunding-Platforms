{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { PresetColors } from '../theme/interface';\nconst inverseColors = PresetColors.map(color => `${color}-inverse`);\nexport const PresetStatusColorTypes = ['success', 'processing', 'error', 'default', 'warning'];\n/**\n * determine if the color keyword belongs to the `Ant Design` {@link PresetColors}.\n * @param color color to be judged\n * @param includeInverse whether to include reversed colors\n */\n\nexport function isPresetColor(color) {\n  let includeInverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (includeInverse) {\n    return [].concat(_toConsumableArray(inverseColors), _toConsumableArray(PresetColors)).includes(color);\n  }\n\n  return PresetColors.includes(color);\n}\nexport function isPresetStatusColor(color) {\n  return PresetStatusColorTypes.includes(color);\n}","map":{"version":3,"names":["_toConsumableArray","PresetColors","inverseColors","map","color","PresetStatusColorTypes","isPresetColor","includeInverse","arguments","length","undefined","concat","includes","isPresetStatusColor"],"sources":["D:/year4sem2/evmos/campaign/node_modules/antd/es/_util/colors.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { PresetColors } from '../theme/interface';\nconst inverseColors = PresetColors.map(color => `${color}-inverse`);\nexport const PresetStatusColorTypes = ['success', 'processing', 'error', 'default', 'warning'];\n/**\n * determine if the color keyword belongs to the `Ant Design` {@link PresetColors}.\n * @param color color to be judged\n * @param includeInverse whether to include reversed colors\n */\nexport function isPresetColor(color) {\n  let includeInverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (includeInverse) {\n    return [].concat(_toConsumableArray(inverseColors), _toConsumableArray(PresetColors)).includes(color);\n  }\n  return PresetColors.includes(color);\n}\nexport function isPresetStatusColor(color) {\n  return PresetStatusColorTypes.includes(color);\n}"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,8CAA/B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,MAAMC,aAAa,GAAGD,YAAY,CAACE,GAAb,CAAiBC,KAAK,IAAK,GAAEA,KAAM,UAAnC,CAAtB;AACA,OAAO,MAAMC,sBAAsB,GAAG,CAAC,SAAD,EAAY,YAAZ,EAA0B,OAA1B,EAAmC,SAAnC,EAA8C,SAA9C,CAA/B;AACP;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,CAAuBF,KAAvB,EAA8B;EACnC,IAAIG,cAAc,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAzF;;EACA,IAAID,cAAJ,EAAoB;IAClB,OAAO,GAAGI,MAAH,CAAUX,kBAAkB,CAACE,aAAD,CAA5B,EAA6CF,kBAAkB,CAACC,YAAD,CAA/D,EAA+EW,QAA/E,CAAwFR,KAAxF,CAAP;EACD;;EACD,OAAOH,YAAY,CAACW,QAAb,CAAsBR,KAAtB,CAAP;AACD;AACD,OAAO,SAASS,mBAAT,CAA6BT,KAA7B,EAAoC;EACzC,OAAOC,sBAAsB,CAACO,QAAvB,CAAgCR,KAAhC,CAAP;AACD"},"metadata":{},"sourceType":"module"}